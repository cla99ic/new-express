[{"path":"\\.dockerignore","content":".idea/\ndist/\nnode_modules/\n"},{"path":"\\.env","content":"JWT_SECRET=shhhsecret\r\nREDIS_HOST=localhost\r\nREDIS_PORT=6379\r\nREDIS_PASSWORD=cla99icPhoenix@ReDiS1988\r\nDB_HOST=127.0.0.1\r\nREMOTE_HOST=1.2.3.4\r\nDB_USER=cla99ic\r\nDB_PASSWORD=whoKNOWS@MNGDB1998\r\nDB_NAME=project\r\nPORT=4000"},{"path":"\\.gitignore","content":"node_modules/\n.env\npackage-lock.json\nyarn.lock\nprivate/\npublic/\nconverted.yaml\ndist/\napis.json"},{"path":"\\.gitlab-ci.yml","content":"stages:\n    - build\n# config this\nproject:\n    stage: build\n    image: docker:latest\n    services:\n        - docker:dind\n    script:\n        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'\n        - eval $(ssh-agent -s)\n        - ssh-add <(echo \"$SSH_PRIVATE_KEY\")\n        - mkdir -p ~/.ssh\n        - '[[ -f /.dockerenv ]] && echo -e \"Host *\\n\\tStrictHostKeyChecking no\\n\\n\" > ~/.ssh/config'\n        - docker login -u \"$registryuser\" -p \"$registrypass\" $registryurl\n        - docker image prune -a -f\n        - ssh root@$registryserver \"sed 's/IMAGENAME/project\\/backend/g' delete.sh | /bin/sh; docker exec registry bin/registry garbage-collect /etc/docker/registry/config.yml\"\n        - ssh root@$registryserver \"docker-compose restart\"\n        - docker build --tag registry.cla99ic.ir/project/backend:latest ./\n        - docker push registry.cla99ic.ir/project/backend:latest\n        - docker image prune -a -f\n        - ssh root@$prodserver \"cd ~; docker-compose pull; docker-compose up -d; docker exec nginx nginx -s reload\"\n    tags:\n        - docker\n    rules:\n        - if: '$CI_COMMIT_BRANCH == \"master\"'\n"},{"path":"\\.prettierrc","content":"{\n    \"trailingComma\": \"es5\",\n    \"tabWidth\": 4,\n    \"semi\": false,\n    \"singleQuote\": true,\n    \"printWidth\": 200\n}\n"},{"path":"\\app.ts","content":"import * as dotenv from 'dotenv'\ndotenv.config({ path: process.cwd() + '/.env' })\n// built in libraries\n\nimport http from 'http'\n// databases\nimport getRedis from './src/db/redis'\nimport checkInput from './src/middleware/checkInput'\nimport Constant from './src/model/maintenance/constant.js'\nimport scan from './src/scanApis'\nprocess.on('uncaughtException', function (err) {\n    console.error(err.stack)\n})\nconst redis = getRedis()\n\n// express and socket io\nimport cors from 'cors'\nimport express from 'express'\nimport fileUpload from 'express-fileupload'\nimport mongoose from 'mongoose'\nconst ObjectId = mongoose.Types.ObjectId\n\nimport { listFiles } from './src/utilities'\nconst app = express()\nconst server = http.createServer(app)\n\nfunction replaceValue(item: any) {\n    let temp = JSON.stringify(item)\n    while (temp.includes('createdAt\":\"')) {\n        const stringDate = temp.split('createdAt\":\"')[1].split('\"')[0]\n        const numberDate = new Date(stringDate).getTime()\n        temp = temp.replace('createdAt\":\"' + stringDate + '\"', 'createdAt\":' + numberDate + '')\n    }\n    while (temp.includes('updatedAt\":\"')) {\n        const stringDate = temp.split('updatedAt\":\"')[1].split('\"')[0]\n        const numberDate = new Date(stringDate).getTime()\n        temp = temp.replace('updatedAt\":\"' + stringDate + '\"', 'updatedAt\":' + numberDate + '')\n    }\n    return JSON.parse(temp)\n}\n\napp.use(function (req, res, next) {\n    var send = res.send\n    res.modifiedSend = function (body: any) {\n        try {\n            let s = JSON.stringify(body)\n            s = s.replace(/\"_id\":/g, '\"id\":')\n            body = JSON.parse(s)\n            body = replaceValue(body)\n        } catch (e) {}\n        send.call(this, body)\n    }\n    next()\n})\n\napp.use(cors())\napp.use(express.static(process.cwd() + '/public'))\n\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }))\napp.use(express.text())\napp.use(fileUpload())\napp.use(checkInput)\napp.use((req, res, next) => {\n    if (req.body.tags && typeof req.body.tags == 'string') req.body.tags = req.body.tags.split(',')\n    next()\n})\n\nconst loadRouters = async () => {\n    const files = listFiles([], process.cwd() + '/dist/src/router')\n    if (!files) return\n    for (let file of files) {\n        try {\n            if (!file.path.endsWith('.map')) {\n                const router = require(file.path)\n                app.use('/api/v2', router.default)\n            }\n        } catch (e: any) {\n            console.log(e.stack)\n            console.log('error importing router: ' + file.name)\n        }\n    }\n}\nloadRouters()\n\n\nscan()\n\nconst loadConstants = async () => {\n    const constants = await Constant.find()\n    for (let constant of constants) {\n        if (constant.values && constant.values.length == 1) process.env[constant.key] = constant.values[0]\n    }\n    if (!process.env.INTERVAL) process.env.INTERVAL = '1000'\n}\n\nloadConstants()\n\nserver.listen(process.env.PORT, () => {\n    console.log('App is listening on port ' + process.env.PORT)\n})\n\nconst run = async () => {\n    // before project\n}\nrun()\n"},{"path":"\\CustomDocument.ts","content":"import { Document } from 'mongoose'\ninterface CDocument extends Document {\n    deleted: boolean\n    apply(id?: string, ip?: string): void\n}\n\nexport default CDocument\n"},{"path":"\\declarations.d.ts","content":"declare namespace Express {\n    export interface Request {\n        user?: import('./src/model/profile/user').IUser\n        admin?: import('./src/model/admin/admin').IAdmin\n        token?: string\n    }\n    export interface Response {\n        modifiedSend: any\n    }\n}\n"},{"path":"\\Dockerfile","content":"FROM node:16\nWORKDIR /usr/src/app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npx tsc\nEXPOSE 4000\nCMD [ \"node\", \"dist/app.js\" ]"},{"path":"\\package-lock.json","content":"{\n    \"name\": \"qbic.backend\",\n    \"version\": \"1.0.0\",\n    \"lockfileVersion\": 2,\n    \"requires\": true,\n    \"packages\": {\n        \"\": {\n            \"name\": \"qbic.backend\",\n            \"version\": \"1.0.0\",\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"@types/bcryptjs\": \"^2.4.2\",\n                \"@types/cors\": \"^2.8.13\",\n                \"@types/express\": \"^4.17.17\",\n                \"@types/express-fileupload\": \"^1.4.1\",\n                \"@types/jsonwebtoken\": \"^9.0.2\",\n                \"axios\": \"^1.4.0\",\n                \"bcryptjs\": \"^2.4.3\",\n                \"cors\": \"^2.8.5\",\n                \"dotenv\": \"^16.3.1\",\n                \"express\": \"^4.18.2\",\n                \"express-fileupload\": \"^1.4.0\",\n                \"jsonwebtoken\": \"^9.0.0\",\n                \"mongoose\": \"^7.3.0\",\n                \"redis\": \"^4.6.7\",\n                \"typescript\": \"^5.1.3\"\n            }\n        },\n        \"node_modules/@redis/bloom\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/bloom/-/bloom-1.2.0.tgz\",\n            \"integrity\": \"sha512-HG2DFjYKbpNmVXsa0keLHp/3leGJz1mjh09f2RLGGLQZzSHpkmZWuwJbAvo3QcRY8p80m5+ZdXZdYOSBLlp7Cg==\",\n            \"peerDependencies\": {\n                \"@redis/client\": \"^1.0.0\"\n            }\n        },\n        \"node_modules/@redis/client\": {\n            \"version\": \"1.5.8\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/client/-/client-1.5.8.tgz\",\n            \"integrity\": \"sha512-xzElwHIO6rBAqzPeVnCzgvrnBEcFL1P0w8P65VNLRkdVW8rOE58f52hdj0BDgmsdOm4f1EoXPZtH4Fh7M/qUpw==\",\n            \"dependencies\": {\n                \"cluster-key-slot\": \"1.1.2\",\n                \"generic-pool\": \"3.9.0\",\n                \"yallist\": \"4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=14\"\n            }\n        },\n        \"node_modules/@redis/graph\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/graph/-/graph-1.1.0.tgz\",\n            \"integrity\": \"sha512-16yZWngxyXPd+MJxeSr0dqh2AIOi8j9yXKcKCwVaKDbH3HTuETpDVPcLujhFYVPtYrngSco31BUcSa9TH31Gqg==\",\n            \"peerDependencies\": {\n                \"@redis/client\": \"^1.0.0\"\n            }\n        },\n        \"node_modules/@redis/json\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/json/-/json-1.0.4.tgz\",\n            \"integrity\": \"sha512-LUZE2Gdrhg0Rx7AN+cZkb1e6HjoSKaeeW8rYnt89Tly13GBI5eP4CwDVr+MY8BAYfCg4/N15OUrtLoona9uSgw==\",\n            \"peerDependencies\": {\n                \"@redis/client\": \"^1.0.0\"\n            }\n        },\n        \"node_modules/@redis/search\": {\n            \"version\": \"1.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/search/-/search-1.1.3.tgz\",\n            \"integrity\": \"sha512-4Dg1JjvCevdiCBTZqjhKkGoC5/BcB7k9j99kdMnaXFXg8x4eyOIVg9487CMv7/BUVkFLZCaIh8ead9mU15DNng==\",\n            \"peerDependencies\": {\n                \"@redis/client\": \"^1.0.0\"\n            }\n        },\n        \"node_modules/@redis/time-series\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/time-series/-/time-series-1.0.4.tgz\",\n            \"integrity\": \"sha512-ThUIgo2U/g7cCuZavucQTQzA9g9JbDDY2f64u3AbAoz/8vE2lt2U37LamDUVChhaDA3IRT9R6VvJwqnUfTJzng==\",\n            \"peerDependencies\": {\n                \"@redis/client\": \"^1.0.0\"\n            }\n        },\n        \"node_modules/@types/bcryptjs\": {\n            \"version\": \"2.4.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/bcryptjs/-/bcryptjs-2.4.2.tgz\",\n            \"integrity\": \"sha512-LiMQ6EOPob/4yUL66SZzu6Yh77cbzJFYll+ZfaPiPPFswtIlA/Fs1MzdKYA7JApHU49zQTbJGX3PDmCpIdDBRQ==\"\n        },\n        \"node_modules/@types/body-parser\": {\n            \"version\": \"1.19.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/body-parser/-/body-parser-1.19.2.tgz\",\n            \"integrity\": \"sha512-ALYone6pm6QmwZoAgeyNksccT9Q4AWZQ6PvfwR37GT6r6FWUPguq6sUmNGSMV2Wr761oQoBxwGGa6DR5o1DC9g==\",\n            \"dependencies\": {\n                \"@types/connect\": \"*\",\n                \"@types/node\": \"*\"\n            }\n        },\n        \"node_modules/@types/busboy\": {\n            \"version\": \"1.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/@types/busboy/-/busboy-1.5.0.tgz\",\n            \"integrity\": \"sha512-ncOOhwmyFDW76c/Tuvv9MA9VGYUCn8blzyWmzYELcNGDb0WXWLSmFi7hJq25YdRBYJrmMBB5jZZwUjlJe9HCjQ==\",\n            \"dependencies\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"node_modules/@types/connect\": {\n            \"version\": \"3.4.35\",\n            \"resolved\": \"https://registry.npmjs.org/@types/connect/-/connect-3.4.35.tgz\",\n            \"integrity\": \"sha512-cdeYyv4KWoEgpBISTxWvqYsVy444DOqehiF3fM3ne10AmJ62RSyNkUnxMJXHQWRQQX2eR94m5y1IZyDwBjV9FQ==\",\n            \"dependencies\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"node_modules/@types/cors\": {\n            \"version\": \"2.8.13\",\n            \"resolved\": \"https://registry.npmjs.org/@types/cors/-/cors-2.8.13.tgz\",\n            \"integrity\": \"sha512-RG8AStHlUiV5ysZQKq97copd2UmVYw3/pRMLefISZ3S1hK104Cwm7iLQ3fTKx+lsUH2CE8FlLaYeEA2LSeqYUA==\",\n            \"dependencies\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"node_modules/@types/express\": {\n            \"version\": \"4.17.17\",\n            \"resolved\": \"https://registry.npmjs.org/@types/express/-/express-4.17.17.tgz\",\n            \"integrity\": \"sha512-Q4FmmuLGBG58btUnfS1c1r/NQdlp3DMfGDGig8WhfpA2YRUtEkxAjkZb0yvplJGYdF1fsQ81iMDcH24sSCNC/Q==\",\n            \"dependencies\": {\n                \"@types/body-parser\": \"*\",\n                \"@types/express-serve-static-core\": \"^4.17.33\",\n                \"@types/qs\": \"*\",\n                \"@types/serve-static\": \"*\"\n            }\n        },\n        \"node_modules/@types/express-fileupload\": {\n            \"version\": \"1.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/express-fileupload/-/express-fileupload-1.4.1.tgz\",\n            \"integrity\": \"sha512-sbl865h1Sser6SF+efpw2F/+roGISj+PRIbMcGXbtzgJQCBAeeBmoSo7sPge/mBa22ymCHfFPtHFsag/wUxwfg==\",\n            \"dependencies\": {\n                \"@types/busboy\": \"*\",\n                \"@types/express\": \"*\"\n            }\n        },\n        \"node_modules/@types/express-serve-static-core\": {\n            \"version\": \"4.17.35\",\n            \"resolved\": \"https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.17.35.tgz\",\n            \"integrity\": \"sha512-wALWQwrgiB2AWTT91CB62b6Yt0sNHpznUXeZEcnPU3DRdlDIz74x8Qg1UUYKSVFi+va5vKOLYRBI1bRKiLLKIg==\",\n            \"dependencies\": {\n                \"@types/node\": \"*\",\n                \"@types/qs\": \"*\",\n                \"@types/range-parser\": \"*\",\n                \"@types/send\": \"*\"\n            }\n        },\n        \"node_modules/@types/jsonwebtoken\": {\n            \"version\": \"9.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz\",\n            \"integrity\": \"sha512-drE6uz7QBKq1fYqqoFKTDRdFCPHd5TCub75BM+D+cMx7NU9hUz7SESLfC2fSCXVFMO5Yj8sOWHuGqPgjc+fz0Q==\",\n            \"dependencies\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"node_modules/@types/mime\": {\n            \"version\": \"1.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/mime/-/mime-1.3.2.tgz\",\n            \"integrity\": \"sha512-YATxVxgRqNH6nHEIsvg6k2Boc1JHI9ZbH5iWFFv/MTkchz3b1ieGDa5T0a9RznNdI0KhVbdbWSN+KWWrQZRxTw==\"\n        },\n        \"node_modules/@types/node\": {\n            \"version\": \"20.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.3.1.tgz\",\n            \"integrity\": \"sha512-EhcH/wvidPy1WeML3TtYFGR83UzjxeWRen9V402T8aUGYsCHOmfoisV3ZSg03gAFIbLq8TnWOJ0f4cALtnSEUg==\"\n        },\n        \"node_modules/@types/qs\": {\n            \"version\": \"6.9.7\",\n            \"resolved\": \"https://registry.npmjs.org/@types/qs/-/qs-6.9.7.tgz\",\n            \"integrity\": \"sha512-FGa1F62FT09qcrueBA6qYTrJPVDzah9a+493+o2PCXsesWHIn27G98TsSMs3WPNbZIEj4+VJf6saSFpvD+3Zsw==\"\n        },\n        \"node_modules/@types/range-parser\": {\n            \"version\": \"1.2.4\",\n            \"resolved\": \"https://registry.npmjs.org/@types/range-parser/-/range-parser-1.2.4.tgz\",\n            \"integrity\": \"sha512-EEhsLsD6UsDM1yFhAvy0Cjr6VwmpMWqFBCb9w07wVugF7w9nfajxLuVmngTIpgS6svCnm6Vaw+MZhoDCKnOfsw==\"\n        },\n        \"node_modules/@types/send\": {\n            \"version\": \"0.17.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/send/-/send-0.17.1.tgz\",\n            \"integrity\": \"sha512-Cwo8LE/0rnvX7kIIa3QHCkcuF21c05Ayb0ZfxPiv0W8VRiZiNW/WuRupHKpqqGVGf7SUA44QSOUKaEd9lIrd/Q==\",\n            \"dependencies\": {\n                \"@types/mime\": \"^1\",\n                \"@types/node\": \"*\"\n            }\n        },\n        \"node_modules/@types/serve-static\": {\n            \"version\": \"1.15.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/serve-static/-/serve-static-1.15.1.tgz\",\n            \"integrity\": \"sha512-NUo5XNiAdULrJENtJXZZ3fHtfMolzZwczzBbnAeBbqBwG+LaG6YaJtuwzwGSQZ2wsCrxjEhNNjAkKigy3n8teQ==\",\n            \"dependencies\": {\n                \"@types/mime\": \"*\",\n                \"@types/node\": \"*\"\n            }\n        },\n        \"node_modules/@types/webidl-conversions\": {\n            \"version\": \"7.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n            \"integrity\": \"sha512-xTE1E+YF4aWPJJeUzaZI5DRntlkY3+BCVJi0axFptnjGmAoWxkyREIh/XMrfxVLejwQxMCfDXdICo0VLxThrog==\"\n        },\n        \"node_modules/@types/whatwg-url\": {\n            \"version\": \"8.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-8.2.2.tgz\",\n            \"integrity\": \"sha512-FtQu10RWgn3D9U4aazdwIE2yzphmTJREDqNdODHrbrZmmMqI0vMheC/6NE/J1Yveaj8H+ela+YwWTjq5PGmuhA==\",\n            \"dependencies\": {\n                \"@types/node\": \"*\",\n                \"@types/webidl-conversions\": \"*\"\n            }\n        },\n        \"node_modules/accepts\": {\n            \"version\": \"1.3.8\",\n            \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n            \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n            \"dependencies\": {\n                \"mime-types\": \"~2.1.34\",\n                \"negotiator\": \"0.6.3\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/array-flatten\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n            \"integrity\": \"sha1-ml9pkFGx5wczKPKgCJaLZOopVdI=\"\n        },\n        \"node_modules/asynckit\": {\n            \"version\": \"0.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n            \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\"\n        },\n        \"node_modules/axios\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/axios/-/axios-1.4.0.tgz\",\n            \"integrity\": \"sha512-S4XCWMEmzvo64T9GfvQDOXgYRDJ/wsSZc7Jvdgx5u1sd0JwsuPLqb3SYmusag+edF6ziyMensPVqLTSc1PiSEA==\",\n            \"dependencies\": {\n                \"follow-redirects\": \"^1.15.0\",\n                \"form-data\": \"^4.0.0\",\n                \"proxy-from-env\": \"^1.1.0\"\n            }\n        },\n        \"node_modules/bcryptjs\": {\n            \"version\": \"2.4.3\",\n            \"resolved\": \"https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz\",\n            \"integrity\": \"sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==\"\n        },\n        \"node_modules/body-parser\": {\n            \"version\": \"1.20.1\",\n            \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.1.tgz\",\n            \"integrity\": \"sha512-jWi7abTbYwajOytWCQc37VulmWiRae5RyTpaCyDcS5/lMdtwSz5lOpDE67srw/HYe35f1z3fDQw+3txg7gNtWw==\",\n            \"dependencies\": {\n                \"bytes\": \"3.1.2\",\n                \"content-type\": \"~1.0.4\",\n                \"debug\": \"2.6.9\",\n                \"depd\": \"2.0.0\",\n                \"destroy\": \"1.2.0\",\n                \"http-errors\": \"2.0.0\",\n                \"iconv-lite\": \"0.4.24\",\n                \"on-finished\": \"2.4.1\",\n                \"qs\": \"6.11.0\",\n                \"raw-body\": \"2.5.1\",\n                \"type-is\": \"~1.6.18\",\n                \"unpipe\": \"1.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8\",\n                \"npm\": \"1.2.8000 || >= 1.4.16\"\n            }\n        },\n        \"node_modules/bson\": {\n            \"version\": \"5.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/bson/-/bson-5.3.0.tgz\",\n            \"integrity\": \"sha512-ukmCZMneMlaC5ebPHXIkP8YJzNl5DC41N5MAIvKDqLggdao342t4McltoJBQfQya/nHBWAcSsYRqlXPoQkTJag==\",\n            \"engines\": {\n                \"node\": \">=14.20.1\"\n            }\n        },\n        \"node_modules/buffer-equal-constant-time\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz\",\n            \"integrity\": \"sha1-+OcRMvf/5uAaXJaXpMbz5I1cyBk=\"\n        },\n        \"node_modules/busboy\": {\n            \"version\": \"1.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz\",\n            \"integrity\": \"sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==\",\n            \"dependencies\": {\n                \"streamsearch\": \"^1.1.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10.16.0\"\n            }\n        },\n        \"node_modules/bytes\": {\n            \"version\": \"3.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\n            \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/call-bind\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\n            \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\n            \"dependencies\": {\n                \"function-bind\": \"^1.1.1\",\n                \"get-intrinsic\": \"^1.0.2\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/cluster-key-slot\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/cluster-key-slot/-/cluster-key-slot-1.1.2.tgz\",\n            \"integrity\": \"sha512-RMr0FhtfXemyinomL4hrWcYJxmX6deFdCxpJzhDttxgO1+bcCnkk+9drydLVDmAMG7NE6aN/fl4F7ucU/90gAA==\",\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/combined-stream\": {\n            \"version\": \"1.0.8\",\n            \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n            \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n            \"dependencies\": {\n                \"delayed-stream\": \"~1.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/content-disposition\": {\n            \"version\": \"0.5.4\",\n            \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\n            \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\n            \"dependencies\": {\n                \"safe-buffer\": \"5.2.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/content-type\": {\n            \"version\": \"1.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\n            \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/cookie\": {\n            \"version\": \"0.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz\",\n            \"integrity\": \"sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw==\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/cookie-signature\": {\n            \"version\": \"1.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n            \"integrity\": \"sha1-4wOogrNCzD7oylE6eZmXNNqzriw=\"\n        },\n        \"node_modules/cors\": {\n            \"version\": \"2.8.5\",\n            \"resolved\": \"https://registry.npmjs.org/cors/-/cors-2.8.5.tgz\",\n            \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\n            \"dependencies\": {\n                \"object-assign\": \"^4\",\n                \"vary\": \"^1\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.10\"\n            }\n        },\n        \"node_modules/debug\": {\n            \"version\": \"2.6.9\",\n            \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n            \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n            \"dependencies\": {\n                \"ms\": \"2.0.0\"\n            }\n        },\n        \"node_modules/delayed-stream\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n            \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\",\n            \"engines\": {\n                \"node\": \">=0.4.0\"\n            }\n        },\n        \"node_modules/depd\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n            \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/destroy\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n            \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\n            \"engines\": {\n                \"node\": \">= 0.8\",\n                \"npm\": \"1.2.8000 || >= 1.4.16\"\n            }\n        },\n        \"node_modules/dotenv\": {\n            \"version\": \"16.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.3.1.tgz\",\n            \"integrity\": \"sha512-IPzF4w4/Rd94bA9imS68tZBaYyBWSCE47V1RGuMrB94iyTOIEwRmVL2x/4An+6mETpLrKJ5hQkB8W4kFAadeIQ==\",\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/motdotla/dotenv?sponsor=1\"\n            }\n        },\n        \"node_modules/ecdsa-sig-formatter\": {\n            \"version\": \"1.0.11\",\n            \"resolved\": \"https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz\",\n            \"integrity\": \"sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==\",\n            \"dependencies\": {\n                \"safe-buffer\": \"^5.0.1\"\n            }\n        },\n        \"node_modules/ee-first\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n            \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\"\n        },\n        \"node_modules/encodeurl\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n            \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/escape-html\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n            \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\"\n        },\n        \"node_modules/etag\": {\n            \"version\": \"1.8.1\",\n            \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n            \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/express\": {\n            \"version\": \"4.18.2\",\n            \"resolved\": \"https://registry.npmjs.org/express/-/express-4.18.2.tgz\",\n            \"integrity\": \"sha512-5/PsL6iGPdfQ/lKM1UuielYgv3BUoJfz1aUwU9vHZ+J7gyvwdQXFEBIEIaxeGf0GIcreATNyBExtalisDbuMqQ==\",\n            \"dependencies\": {\n                \"accepts\": \"~1.3.8\",\n                \"array-flatten\": \"1.1.1\",\n                \"body-parser\": \"1.20.1\",\n                \"content-disposition\": \"0.5.4\",\n                \"content-type\": \"~1.0.4\",\n                \"cookie\": \"0.5.0\",\n                \"cookie-signature\": \"1.0.6\",\n                \"debug\": \"2.6.9\",\n                \"depd\": \"2.0.0\",\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"etag\": \"~1.8.1\",\n                \"finalhandler\": \"1.2.0\",\n                \"fresh\": \"0.5.2\",\n                \"http-errors\": \"2.0.0\",\n                \"merge-descriptors\": \"1.0.1\",\n                \"methods\": \"~1.1.2\",\n                \"on-finished\": \"2.4.1\",\n                \"parseurl\": \"~1.3.3\",\n                \"path-to-regexp\": \"0.1.7\",\n                \"proxy-addr\": \"~2.0.7\",\n                \"qs\": \"6.11.0\",\n                \"range-parser\": \"~1.2.1\",\n                \"safe-buffer\": \"5.2.1\",\n                \"send\": \"0.18.0\",\n                \"serve-static\": \"1.15.0\",\n                \"setprototypeof\": \"1.2.0\",\n                \"statuses\": \"2.0.1\",\n                \"type-is\": \"~1.6.18\",\n                \"utils-merge\": \"1.0.1\",\n                \"vary\": \"~1.1.2\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.10.0\"\n            }\n        },\n        \"node_modules/express-fileupload\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/express-fileupload/-/express-fileupload-1.4.0.tgz\",\n            \"integrity\": \"sha512-RjzLCHxkv3umDeZKeFeMg8w7qe0V09w3B7oGZprr/oO2H/ISCgNzuqzn7gV3HRWb37GjRk429CCpSLS2KNTqMQ==\",\n            \"dependencies\": {\n                \"busboy\": \"^1.6.0\"\n            },\n            \"engines\": {\n                \"node\": \">=12.0.0\"\n            }\n        },\n        \"node_modules/finalhandler\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz\",\n            \"integrity\": \"sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==\",\n            \"dependencies\": {\n                \"debug\": \"2.6.9\",\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"on-finished\": \"2.4.1\",\n                \"parseurl\": \"~1.3.3\",\n                \"statuses\": \"2.0.1\",\n                \"unpipe\": \"~1.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/follow-redirects\": {\n            \"version\": \"1.15.2\",\n            \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.2.tgz\",\n            \"integrity\": \"sha512-VQLG33o04KaQ8uYi2tVNbdrWp1QWxNNea+nmIB4EVM28v0hmP17z7aG1+wAkNzVq4KeXTq3221ye5qTJP91JwA==\",\n            \"funding\": [\n                {\n                    \"type\": \"individual\",\n                    \"url\": \"https://github.com/sponsors/RubenVerborgh\"\n                }\n            ],\n            \"engines\": {\n                \"node\": \">=4.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"debug\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/form-data\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz\",\n            \"integrity\": \"sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==\",\n            \"dependencies\": {\n                \"asynckit\": \"^0.4.0\",\n                \"combined-stream\": \"^1.0.8\",\n                \"mime-types\": \"^2.1.12\"\n            },\n            \"engines\": {\n                \"node\": \">= 6\"\n            }\n        },\n        \"node_modules/forwarded\": {\n            \"version\": \"0.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n            \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/fresh\": {\n            \"version\": \"0.5.2\",\n            \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n            \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/function-bind\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",\n            \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\"\n        },\n        \"node_modules/generic-pool\": {\n            \"version\": \"3.9.0\",\n            \"resolved\": \"https://registry.npmjs.org/generic-pool/-/generic-pool-3.9.0.tgz\",\n            \"integrity\": \"sha512-hymDOu5B53XvN4QT9dBmZxPX4CWhBPPLguTZ9MMFeFa/Kg0xWVfylOVNlJji/E7yTZWFd/q9GO5TxDLq156D7g==\",\n            \"engines\": {\n                \"node\": \">= 4\"\n            }\n        },\n        \"node_modules/get-intrinsic\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.1.tgz\",\n            \"integrity\": \"sha512-2DcsyfABl+gVHEfCOaTrWgyt+tb6MSEGmKq+kI5HwLbIYgjgmMcV8KQ41uaKz1xxUcn9tJtgFbQUEVcEbd0FYw==\",\n            \"dependencies\": {\n                \"function-bind\": \"^1.1.1\",\n                \"has\": \"^1.0.3\",\n                \"has-proto\": \"^1.0.1\",\n                \"has-symbols\": \"^1.0.3\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/has\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.3.tgz\",\n            \"integrity\": \"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\",\n            \"dependencies\": {\n                \"function-bind\": \"^1.1.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.4.0\"\n            }\n        },\n        \"node_modules/has-proto\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.1.tgz\",\n            \"integrity\": \"sha512-7qE+iP+O+bgF9clE5+UoBFzE65mlBiVj3tKCrlNQ0Ogwm0BjpT/gK4SlLYDMybDh5I3TCTKnPPa0oMG7JDYrhg==\",\n            \"engines\": {\n                \"node\": \">= 0.4\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/has-symbols\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n            \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n            \"engines\": {\n                \"node\": \">= 0.4\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/http-errors\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n            \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n            \"dependencies\": {\n                \"depd\": \"2.0.0\",\n                \"inherits\": \"2.0.4\",\n                \"setprototypeof\": \"1.2.0\",\n                \"statuses\": \"2.0.1\",\n                \"toidentifier\": \"1.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/iconv-lite\": {\n            \"version\": \"0.4.24\",\n            \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n            \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n            \"dependencies\": {\n                \"safer-buffer\": \">= 2.1.2 < 3\"\n            },\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/inherits\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n            \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n        },\n        \"node_modules/ip\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/ip/-/ip-2.0.0.tgz\",\n            \"integrity\": \"sha512-WKa+XuLG1A1R0UWhl2+1XQSi+fZWMsYKffMZTTYsiZaUD8k2yDAj5atimTUD2TZkyCkNEeYE5NhFZmupOGtjYQ==\"\n        },\n        \"node_modules/ipaddr.js\": {\n            \"version\": \"1.9.1\",\n            \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n            \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n            \"engines\": {\n                \"node\": \">= 0.10\"\n            }\n        },\n        \"node_modules/jsonwebtoken\": {\n            \"version\": \"9.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.0.tgz\",\n            \"integrity\": \"sha512-tuGfYXxkQGDPnLJ7SibiQgVgeDgfbPq2k2ICcbgqW8WxWLBAxKQM/ZCu/IT8SOSwmaYl4dpTFCW5xZv7YbbWUw==\",\n            \"dependencies\": {\n                \"jws\": \"^3.2.2\",\n                \"lodash\": \"^4.17.21\",\n                \"ms\": \"^2.1.1\",\n                \"semver\": \"^7.3.8\"\n            },\n            \"engines\": {\n                \"node\": \">=12\",\n                \"npm\": \">=6\"\n            }\n        },\n        \"node_modules/jsonwebtoken/node_modules/ms\": {\n            \"version\": \"2.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n            \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\n        },\n        \"node_modules/jwa\": {\n            \"version\": \"1.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz\",\n            \"integrity\": \"sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==\",\n            \"dependencies\": {\n                \"buffer-equal-constant-time\": \"1.0.1\",\n                \"ecdsa-sig-formatter\": \"1.0.11\",\n                \"safe-buffer\": \"^5.0.1\"\n            }\n        },\n        \"node_modules/jws\": {\n            \"version\": \"3.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/jws/-/jws-3.2.2.tgz\",\n            \"integrity\": \"sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==\",\n            \"dependencies\": {\n                \"jwa\": \"^1.4.1\",\n                \"safe-buffer\": \"^5.0.1\"\n            }\n        },\n        \"node_modules/kareem\": {\n            \"version\": \"2.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/kareem/-/kareem-2.5.1.tgz\",\n            \"integrity\": \"sha512-7jFxRVm+jD+rkq3kY0iZDJfsO2/t4BBPeEb2qKn2lR/9KhuksYk5hxzfRYWMPV8P/x2d0kHD306YyWLzjjH+uA==\",\n            \"engines\": {\n                \"node\": \">=12.0.0\"\n            }\n        },\n        \"node_modules/lodash\": {\n            \"version\": \"4.17.21\",\n            \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n            \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\"\n        },\n        \"node_modules/lru-cache\": {\n            \"version\": \"6.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n            \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n            \"dependencies\": {\n                \"yallist\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/media-typer\": {\n            \"version\": \"0.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n            \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/memory-pager\": {\n            \"version\": \"1.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz\",\n            \"integrity\": \"sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==\",\n            \"optional\": true\n        },\n        \"node_modules/merge-descriptors\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\n            \"integrity\": \"sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=\"\n        },\n        \"node_modules/methods\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n            \"integrity\": \"sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/mime\": {\n            \"version\": \"1.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n            \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n            \"bin\": {\n                \"mime\": \"cli.js\"\n            },\n            \"engines\": {\n                \"node\": \">=4\"\n            }\n        },\n        \"node_modules/mime-db\": {\n            \"version\": \"1.52.0\",\n            \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n            \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/mime-types\": {\n            \"version\": \"2.1.35\",\n            \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n            \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n            \"dependencies\": {\n                \"mime-db\": \"1.52.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/mongodb\": {\n            \"version\": \"5.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/mongodb/-/mongodb-5.6.0.tgz\",\n            \"integrity\": \"sha512-z8qVs9NfobHJm6uzK56XBZF8XwM9H294iRnB7wNjF0SnY93si5HPziIJn+qqvUR5QOff/4L0gCD6SShdR/GtVQ==\",\n            \"dependencies\": {\n                \"bson\": \"^5.3.0\",\n                \"mongodb-connection-string-url\": \"^2.6.0\",\n                \"socks\": \"^2.7.1\"\n            },\n            \"engines\": {\n                \"node\": \">=14.20.1\"\n            },\n            \"optionalDependencies\": {\n                \"saslprep\": \"^1.0.3\"\n            },\n            \"peerDependencies\": {\n                \"@aws-sdk/credential-providers\": \"^3.201.0\",\n                \"mongodb-client-encryption\": \">=2.3.0 <3\",\n                \"snappy\": \"^7.2.2\"\n            },\n            \"peerDependenciesMeta\": {\n                \"@aws-sdk/credential-providers\": {\n                    \"optional\": true\n                },\n                \"mongodb-client-encryption\": {\n                    \"optional\": true\n                },\n                \"snappy\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/mongodb-connection-string-url\": {\n            \"version\": \"2.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-2.6.0.tgz\",\n            \"integrity\": \"sha512-WvTZlI9ab0QYtTYnuMLgobULWhokRjtC7db9LtcVfJ+Hsnyr5eo6ZtNAt3Ly24XZScGMelOcGtm7lSn0332tPQ==\",\n            \"dependencies\": {\n                \"@types/whatwg-url\": \"^8.2.1\",\n                \"whatwg-url\": \"^11.0.0\"\n            }\n        },\n        \"node_modules/mongoose\": {\n            \"version\": \"7.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/mongoose/-/mongoose-7.3.0.tgz\",\n            \"integrity\": \"sha512-gvkV5qxmBkGohlk7VTeePMPM2OkQPeqVYZHvjoM4goOIK6G1eSfJMZwXV21asivXxlaz6OuP29TfGAKrKooDAg==\",\n            \"dependencies\": {\n                \"bson\": \"^5.3.0\",\n                \"kareem\": \"2.5.1\",\n                \"mongodb\": \"5.6.0\",\n                \"mpath\": \"0.9.0\",\n                \"mquery\": \"5.0.0\",\n                \"ms\": \"2.1.3\",\n                \"sift\": \"16.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=14.20.1\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/mongoose\"\n            }\n        },\n        \"node_modules/mongoose/node_modules/ms\": {\n            \"version\": \"2.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n            \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\n        },\n        \"node_modules/mpath\": {\n            \"version\": \"0.9.0\",\n            \"resolved\": \"https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz\",\n            \"integrity\": \"sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==\",\n            \"engines\": {\n                \"node\": \">=4.0.0\"\n            }\n        },\n        \"node_modules/mquery\": {\n            \"version\": \"5.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/mquery/-/mquery-5.0.0.tgz\",\n            \"integrity\": \"sha512-iQMncpmEK8R8ncT8HJGsGc9Dsp8xcgYMVSbs5jgnm1lFHTZqMJTUWTDx1LBO8+mK3tPNZWFLBghQEIOULSTHZg==\",\n            \"dependencies\": {\n                \"debug\": \"4.x\"\n            },\n            \"engines\": {\n                \"node\": \">=14.0.0\"\n            }\n        },\n        \"node_modules/mquery/node_modules/debug\": {\n            \"version\": \"4.3.4\",\n            \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n            \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n            \"dependencies\": {\n                \"ms\": \"2.1.2\"\n            },\n            \"engines\": {\n                \"node\": \">=6.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"supports-color\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/mquery/node_modules/ms\": {\n            \"version\": \"2.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n            \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n        },\n        \"node_modules/ms\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n            \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"\n        },\n        \"node_modules/negotiator\": {\n            \"version\": \"0.6.3\",\n            \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n            \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/object-assign\": {\n            \"version\": \"4.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n            \"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\",\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/object-inspect\": {\n            \"version\": \"1.12.3\",\n            \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.3.tgz\",\n            \"integrity\": \"sha512-geUvdk7c+eizMNUDkRpW1wJwgfOiOeHbxBR/hLXK1aT6zmVSO0jsQcs7fj6MGw89jC/cjGfLcNOrtMYtGqm81g==\",\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/on-finished\": {\n            \"version\": \"2.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n            \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n            \"dependencies\": {\n                \"ee-first\": \"1.1.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/parseurl\": {\n            \"version\": \"1.3.3\",\n            \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n            \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/path-to-regexp\": {\n            \"version\": \"0.1.7\",\n            \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\n            \"integrity\": \"sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=\"\n        },\n        \"node_modules/proxy-addr\": {\n            \"version\": \"2.0.7\",\n            \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n            \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n            \"dependencies\": {\n                \"forwarded\": \"0.2.0\",\n                \"ipaddr.js\": \"1.9.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.10\"\n            }\n        },\n        \"node_modules/proxy-from-env\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\n            \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\"\n        },\n        \"node_modules/punycode\": {\n            \"version\": \"2.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz\",\n            \"integrity\": \"sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==\",\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/qs\": {\n            \"version\": \"6.11.0\",\n            \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.11.0.tgz\",\n            \"integrity\": \"sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==\",\n            \"dependencies\": {\n                \"side-channel\": \"^1.0.4\"\n            },\n            \"engines\": {\n                \"node\": \">=0.6\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/range-parser\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n            \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/raw-body\": {\n            \"version\": \"2.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz\",\n            \"integrity\": \"sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==\",\n            \"dependencies\": {\n                \"bytes\": \"3.1.2\",\n                \"http-errors\": \"2.0.0\",\n                \"iconv-lite\": \"0.4.24\",\n                \"unpipe\": \"1.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/redis\": {\n            \"version\": \"4.6.7\",\n            \"resolved\": \"https://registry.npmjs.org/redis/-/redis-4.6.7.tgz\",\n            \"integrity\": \"sha512-KrkuNJNpCwRm5vFJh0tteMxW8SaUzkm5fBH7eL5hd/D0fAkzvapxbfGPP/r+4JAXdQuX7nebsBkBqA2RHB7Usw==\",\n            \"dependencies\": {\n                \"@redis/bloom\": \"1.2.0\",\n                \"@redis/client\": \"1.5.8\",\n                \"@redis/graph\": \"1.1.0\",\n                \"@redis/json\": \"1.0.4\",\n                \"@redis/search\": \"1.1.3\",\n                \"@redis/time-series\": \"1.0.4\"\n            }\n        },\n        \"node_modules/safe-buffer\": {\n            \"version\": \"5.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n            \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n            \"funding\": [\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/feross\"\n                },\n                {\n                    \"type\": \"patreon\",\n                    \"url\": \"https://www.patreon.com/feross\"\n                },\n                {\n                    \"type\": \"consulting\",\n                    \"url\": \"https://feross.org/support\"\n                }\n            ]\n        },\n        \"node_modules/safer-buffer\": {\n            \"version\": \"2.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n            \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\n        },\n        \"node_modules/saslprep\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/saslprep/-/saslprep-1.0.3.tgz\",\n            \"integrity\": \"sha512-/MY/PEMbk2SuY5sScONwhUDsV2p77Znkb/q3nSVstq/yQzYJOH/Azh29p9oJLsl3LnQwSvZDKagDGBsBwSooag==\",\n            \"optional\": true,\n            \"dependencies\": {\n                \"sparse-bitfield\": \"^3.0.3\"\n            },\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/semver\": {\n            \"version\": \"7.5.2\",\n            \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.5.2.tgz\",\n            \"integrity\": \"sha512-SoftuTROv/cRjCze/scjGyiDtcUyxw1rgYQSZY7XTmtR5hX+dm76iDbTH8TkLPHCQmlbQVSSbNZCPM2hb0knnQ==\",\n            \"dependencies\": {\n                \"lru-cache\": \"^6.0.0\"\n            },\n            \"bin\": {\n                \"semver\": \"bin/semver.js\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/send\": {\n            \"version\": \"0.18.0\",\n            \"resolved\": \"https://registry.npmjs.org/send/-/send-0.18.0.tgz\",\n            \"integrity\": \"sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==\",\n            \"dependencies\": {\n                \"debug\": \"2.6.9\",\n                \"depd\": \"2.0.0\",\n                \"destroy\": \"1.2.0\",\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"etag\": \"~1.8.1\",\n                \"fresh\": \"0.5.2\",\n                \"http-errors\": \"2.0.0\",\n                \"mime\": \"1.6.0\",\n                \"ms\": \"2.1.3\",\n                \"on-finished\": \"2.4.1\",\n                \"range-parser\": \"~1.2.1\",\n                \"statuses\": \"2.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8.0\"\n            }\n        },\n        \"node_modules/send/node_modules/ms\": {\n            \"version\": \"2.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n            \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\n        },\n        \"node_modules/serve-static\": {\n            \"version\": \"1.15.0\",\n            \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz\",\n            \"integrity\": \"sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==\",\n            \"dependencies\": {\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"parseurl\": \"~1.3.3\",\n                \"send\": \"0.18.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8.0\"\n            }\n        },\n        \"node_modules/setprototypeof\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n            \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\n        },\n        \"node_modules/side-channel\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz\",\n            \"integrity\": \"sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==\",\n            \"dependencies\": {\n                \"call-bind\": \"^1.0.0\",\n                \"get-intrinsic\": \"^1.0.2\",\n                \"object-inspect\": \"^1.9.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/sift\": {\n            \"version\": \"16.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/sift/-/sift-16.0.1.tgz\",\n            \"integrity\": \"sha512-Wv6BjQ5zbhW7VFefWusVP33T/EM0vYikCaQ2qR8yULbsilAT8/wQaXvuQ3ptGLpoKx+lihJE3y2UTgKDyyNHZQ==\"\n        },\n        \"node_modules/smart-buffer\": {\n            \"version\": \"4.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n            \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\",\n            \"engines\": {\n                \"node\": \">= 6.0.0\",\n                \"npm\": \">= 3.0.0\"\n            }\n        },\n        \"node_modules/socks\": {\n            \"version\": \"2.7.1\",\n            \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.7.1.tgz\",\n            \"integrity\": \"sha512-7maUZy1N7uo6+WVEX6psASxtNlKaNVMlGQKkG/63nEDdLOWNbiUMoLK7X4uYoLhQstau72mLgfEWcXcwsaHbYQ==\",\n            \"dependencies\": {\n                \"ip\": \"^2.0.0\",\n                \"smart-buffer\": \"^4.2.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 10.13.0\",\n                \"npm\": \">= 3.0.0\"\n            }\n        },\n        \"node_modules/sparse-bitfield\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz\",\n            \"integrity\": \"sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==\",\n            \"optional\": true,\n            \"dependencies\": {\n                \"memory-pager\": \"^1.0.2\"\n            }\n        },\n        \"node_modules/statuses\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n            \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/streamsearch\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz\",\n            \"integrity\": \"sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==\",\n            \"engines\": {\n                \"node\": \">=10.0.0\"\n            }\n        },\n        \"node_modules/toidentifier\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n            \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n            \"engines\": {\n                \"node\": \">=0.6\"\n            }\n        },\n        \"node_modules/tr46\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-3.0.0.tgz\",\n            \"integrity\": \"sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==\",\n            \"dependencies\": {\n                \"punycode\": \"^2.1.1\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/type-is\": {\n            \"version\": \"1.6.18\",\n            \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\n            \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n            \"dependencies\": {\n                \"media-typer\": \"0.3.0\",\n                \"mime-types\": \"~2.1.24\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/typescript\": {\n            \"version\": \"5.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.1.3.tgz\",\n            \"integrity\": \"sha512-XH627E9vkeqhlZFQuL+UsyAXEnibT0kWR2FWONlr4sTjvxyJYnyefgrkyECLzM5NenmKzRAy2rR/OlYLA1HkZw==\",\n            \"bin\": {\n                \"tsc\": \"bin/tsc\",\n                \"tsserver\": \"bin/tsserver\"\n            },\n            \"engines\": {\n                \"node\": \">=14.17\"\n            }\n        },\n        \"node_modules/unpipe\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n            \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/utils-merge\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n            \"integrity\": \"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\",\n            \"engines\": {\n                \"node\": \">= 0.4.0\"\n            }\n        },\n        \"node_modules/vary\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n            \"integrity\": \"sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=\",\n            \"engines\": {\n                \"node\": \">= 0.8\"\n            }\n        },\n        \"node_modules/webidl-conversions\": {\n            \"version\": \"7.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n            \"integrity\": \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\",\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/whatwg-url\": {\n            \"version\": \"11.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-11.0.0.tgz\",\n            \"integrity\": \"sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==\",\n            \"dependencies\": {\n                \"tr46\": \"^3.0.0\",\n                \"webidl-conversions\": \"^7.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/yallist\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n            \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\"\n        }\n    },\n    \"dependencies\": {\n        \"@redis/bloom\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/bloom/-/bloom-1.2.0.tgz\",\n            \"integrity\": \"sha512-HG2DFjYKbpNmVXsa0keLHp/3leGJz1mjh09f2RLGGLQZzSHpkmZWuwJbAvo3QcRY8p80m5+ZdXZdYOSBLlp7Cg==\",\n            \"requires\": {}\n        },\n        \"@redis/client\": {\n            \"version\": \"1.5.8\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/client/-/client-1.5.8.tgz\",\n            \"integrity\": \"sha512-xzElwHIO6rBAqzPeVnCzgvrnBEcFL1P0w8P65VNLRkdVW8rOE58f52hdj0BDgmsdOm4f1EoXPZtH4Fh7M/qUpw==\",\n            \"requires\": {\n                \"cluster-key-slot\": \"1.1.2\",\n                \"generic-pool\": \"3.9.0\",\n                \"yallist\": \"4.0.0\"\n            }\n        },\n        \"@redis/graph\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/graph/-/graph-1.1.0.tgz\",\n            \"integrity\": \"sha512-16yZWngxyXPd+MJxeSr0dqh2AIOi8j9yXKcKCwVaKDbH3HTuETpDVPcLujhFYVPtYrngSco31BUcSa9TH31Gqg==\",\n            \"requires\": {}\n        },\n        \"@redis/json\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/json/-/json-1.0.4.tgz\",\n            \"integrity\": \"sha512-LUZE2Gdrhg0Rx7AN+cZkb1e6HjoSKaeeW8rYnt89Tly13GBI5eP4CwDVr+MY8BAYfCg4/N15OUrtLoona9uSgw==\",\n            \"requires\": {}\n        },\n        \"@redis/search\": {\n            \"version\": \"1.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/search/-/search-1.1.3.tgz\",\n            \"integrity\": \"sha512-4Dg1JjvCevdiCBTZqjhKkGoC5/BcB7k9j99kdMnaXFXg8x4eyOIVg9487CMv7/BUVkFLZCaIh8ead9mU15DNng==\",\n            \"requires\": {}\n        },\n        \"@redis/time-series\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/@redis/time-series/-/time-series-1.0.4.tgz\",\n            \"integrity\": \"sha512-ThUIgo2U/g7cCuZavucQTQzA9g9JbDDY2f64u3AbAoz/8vE2lt2U37LamDUVChhaDA3IRT9R6VvJwqnUfTJzng==\",\n            \"requires\": {}\n        },\n        \"@types/bcryptjs\": {\n            \"version\": \"2.4.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/bcryptjs/-/bcryptjs-2.4.2.tgz\",\n            \"integrity\": \"sha512-LiMQ6EOPob/4yUL66SZzu6Yh77cbzJFYll+ZfaPiPPFswtIlA/Fs1MzdKYA7JApHU49zQTbJGX3PDmCpIdDBRQ==\"\n        },\n        \"@types/body-parser\": {\n            \"version\": \"1.19.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/body-parser/-/body-parser-1.19.2.tgz\",\n            \"integrity\": \"sha512-ALYone6pm6QmwZoAgeyNksccT9Q4AWZQ6PvfwR37GT6r6FWUPguq6sUmNGSMV2Wr761oQoBxwGGa6DR5o1DC9g==\",\n            \"requires\": {\n                \"@types/connect\": \"*\",\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/busboy\": {\n            \"version\": \"1.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/@types/busboy/-/busboy-1.5.0.tgz\",\n            \"integrity\": \"sha512-ncOOhwmyFDW76c/Tuvv9MA9VGYUCn8blzyWmzYELcNGDb0WXWLSmFi7hJq25YdRBYJrmMBB5jZZwUjlJe9HCjQ==\",\n            \"requires\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/connect\": {\n            \"version\": \"3.4.35\",\n            \"resolved\": \"https://registry.npmjs.org/@types/connect/-/connect-3.4.35.tgz\",\n            \"integrity\": \"sha512-cdeYyv4KWoEgpBISTxWvqYsVy444DOqehiF3fM3ne10AmJ62RSyNkUnxMJXHQWRQQX2eR94m5y1IZyDwBjV9FQ==\",\n            \"requires\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/cors\": {\n            \"version\": \"2.8.13\",\n            \"resolved\": \"https://registry.npmjs.org/@types/cors/-/cors-2.8.13.tgz\",\n            \"integrity\": \"sha512-RG8AStHlUiV5ysZQKq97copd2UmVYw3/pRMLefISZ3S1hK104Cwm7iLQ3fTKx+lsUH2CE8FlLaYeEA2LSeqYUA==\",\n            \"requires\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/express\": {\n            \"version\": \"4.17.17\",\n            \"resolved\": \"https://registry.npmjs.org/@types/express/-/express-4.17.17.tgz\",\n            \"integrity\": \"sha512-Q4FmmuLGBG58btUnfS1c1r/NQdlp3DMfGDGig8WhfpA2YRUtEkxAjkZb0yvplJGYdF1fsQ81iMDcH24sSCNC/Q==\",\n            \"requires\": {\n                \"@types/body-parser\": \"*\",\n                \"@types/express-serve-static-core\": \"^4.17.33\",\n                \"@types/qs\": \"*\",\n                \"@types/serve-static\": \"*\"\n            }\n        },\n        \"@types/express-fileupload\": {\n            \"version\": \"1.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/express-fileupload/-/express-fileupload-1.4.1.tgz\",\n            \"integrity\": \"sha512-sbl865h1Sser6SF+efpw2F/+roGISj+PRIbMcGXbtzgJQCBAeeBmoSo7sPge/mBa22ymCHfFPtHFsag/wUxwfg==\",\n            \"requires\": {\n                \"@types/busboy\": \"*\",\n                \"@types/express\": \"*\"\n            }\n        },\n        \"@types/express-serve-static-core\": {\n            \"version\": \"4.17.35\",\n            \"resolved\": \"https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.17.35.tgz\",\n            \"integrity\": \"sha512-wALWQwrgiB2AWTT91CB62b6Yt0sNHpznUXeZEcnPU3DRdlDIz74x8Qg1UUYKSVFi+va5vKOLYRBI1bRKiLLKIg==\",\n            \"requires\": {\n                \"@types/node\": \"*\",\n                \"@types/qs\": \"*\",\n                \"@types/range-parser\": \"*\",\n                \"@types/send\": \"*\"\n            }\n        },\n        \"@types/jsonwebtoken\": {\n            \"version\": \"9.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz\",\n            \"integrity\": \"sha512-drE6uz7QBKq1fYqqoFKTDRdFCPHd5TCub75BM+D+cMx7NU9hUz7SESLfC2fSCXVFMO5Yj8sOWHuGqPgjc+fz0Q==\",\n            \"requires\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/mime\": {\n            \"version\": \"1.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/mime/-/mime-1.3.2.tgz\",\n            \"integrity\": \"sha512-YATxVxgRqNH6nHEIsvg6k2Boc1JHI9ZbH5iWFFv/MTkchz3b1ieGDa5T0a9RznNdI0KhVbdbWSN+KWWrQZRxTw==\"\n        },\n        \"@types/node\": {\n            \"version\": \"20.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.3.1.tgz\",\n            \"integrity\": \"sha512-EhcH/wvidPy1WeML3TtYFGR83UzjxeWRen9V402T8aUGYsCHOmfoisV3ZSg03gAFIbLq8TnWOJ0f4cALtnSEUg==\"\n        },\n        \"@types/qs\": {\n            \"version\": \"6.9.7\",\n            \"resolved\": \"https://registry.npmjs.org/@types/qs/-/qs-6.9.7.tgz\",\n            \"integrity\": \"sha512-FGa1F62FT09qcrueBA6qYTrJPVDzah9a+493+o2PCXsesWHIn27G98TsSMs3WPNbZIEj4+VJf6saSFpvD+3Zsw==\"\n        },\n        \"@types/range-parser\": {\n            \"version\": \"1.2.4\",\n            \"resolved\": \"https://registry.npmjs.org/@types/range-parser/-/range-parser-1.2.4.tgz\",\n            \"integrity\": \"sha512-EEhsLsD6UsDM1yFhAvy0Cjr6VwmpMWqFBCb9w07wVugF7w9nfajxLuVmngTIpgS6svCnm6Vaw+MZhoDCKnOfsw==\"\n        },\n        \"@types/send\": {\n            \"version\": \"0.17.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/send/-/send-0.17.1.tgz\",\n            \"integrity\": \"sha512-Cwo8LE/0rnvX7kIIa3QHCkcuF21c05Ayb0ZfxPiv0W8VRiZiNW/WuRupHKpqqGVGf7SUA44QSOUKaEd9lIrd/Q==\",\n            \"requires\": {\n                \"@types/mime\": \"^1\",\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/serve-static\": {\n            \"version\": \"1.15.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/serve-static/-/serve-static-1.15.1.tgz\",\n            \"integrity\": \"sha512-NUo5XNiAdULrJENtJXZZ3fHtfMolzZwczzBbnAeBbqBwG+LaG6YaJtuwzwGSQZ2wsCrxjEhNNjAkKigy3n8teQ==\",\n            \"requires\": {\n                \"@types/mime\": \"*\",\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/webidl-conversions\": {\n            \"version\": \"7.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n            \"integrity\": \"sha512-xTE1E+YF4aWPJJeUzaZI5DRntlkY3+BCVJi0axFptnjGmAoWxkyREIh/XMrfxVLejwQxMCfDXdICo0VLxThrog==\"\n        },\n        \"@types/whatwg-url\": {\n            \"version\": \"8.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-8.2.2.tgz\",\n            \"integrity\": \"sha512-FtQu10RWgn3D9U4aazdwIE2yzphmTJREDqNdODHrbrZmmMqI0vMheC/6NE/J1Yveaj8H+ela+YwWTjq5PGmuhA==\",\n            \"requires\": {\n                \"@types/node\": \"*\",\n                \"@types/webidl-conversions\": \"*\"\n            }\n        },\n        \"accepts\": {\n            \"version\": \"1.3.8\",\n            \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n            \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n            \"requires\": {\n                \"mime-types\": \"~2.1.34\",\n                \"negotiator\": \"0.6.3\"\n            }\n        },\n        \"array-flatten\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n            \"integrity\": \"sha1-ml9pkFGx5wczKPKgCJaLZOopVdI=\"\n        },\n        \"asynckit\": {\n            \"version\": \"0.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n            \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\"\n        },\n        \"axios\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/axios/-/axios-1.4.0.tgz\",\n            \"integrity\": \"sha512-S4XCWMEmzvo64T9GfvQDOXgYRDJ/wsSZc7Jvdgx5u1sd0JwsuPLqb3SYmusag+edF6ziyMensPVqLTSc1PiSEA==\",\n            \"requires\": {\n                \"follow-redirects\": \"^1.15.0\",\n                \"form-data\": \"^4.0.0\",\n                \"proxy-from-env\": \"^1.1.0\"\n            }\n        },\n        \"bcryptjs\": {\n            \"version\": \"2.4.3\",\n            \"resolved\": \"https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz\",\n            \"integrity\": \"sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==\"\n        },\n        \"body-parser\": {\n            \"version\": \"1.20.1\",\n            \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.1.tgz\",\n            \"integrity\": \"sha512-jWi7abTbYwajOytWCQc37VulmWiRae5RyTpaCyDcS5/lMdtwSz5lOpDE67srw/HYe35f1z3fDQw+3txg7gNtWw==\",\n            \"requires\": {\n                \"bytes\": \"3.1.2\",\n                \"content-type\": \"~1.0.4\",\n                \"debug\": \"2.6.9\",\n                \"depd\": \"2.0.0\",\n                \"destroy\": \"1.2.0\",\n                \"http-errors\": \"2.0.0\",\n                \"iconv-lite\": \"0.4.24\",\n                \"on-finished\": \"2.4.1\",\n                \"qs\": \"6.11.0\",\n                \"raw-body\": \"2.5.1\",\n                \"type-is\": \"~1.6.18\",\n                \"unpipe\": \"1.0.0\"\n            }\n        },\n        \"bson\": {\n            \"version\": \"5.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/bson/-/bson-5.3.0.tgz\",\n            \"integrity\": \"sha512-ukmCZMneMlaC5ebPHXIkP8YJzNl5DC41N5MAIvKDqLggdao342t4McltoJBQfQya/nHBWAcSsYRqlXPoQkTJag==\"\n        },\n        \"buffer-equal-constant-time\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz\",\n            \"integrity\": \"sha1-+OcRMvf/5uAaXJaXpMbz5I1cyBk=\"\n        },\n        \"busboy\": {\n            \"version\": \"1.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz\",\n            \"integrity\": \"sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==\",\n            \"requires\": {\n                \"streamsearch\": \"^1.1.0\"\n            }\n        },\n        \"bytes\": {\n            \"version\": \"3.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\n            \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\"\n        },\n        \"call-bind\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\n            \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\n            \"requires\": {\n                \"function-bind\": \"^1.1.1\",\n                \"get-intrinsic\": \"^1.0.2\"\n            }\n        },\n        \"cluster-key-slot\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/cluster-key-slot/-/cluster-key-slot-1.1.2.tgz\",\n            \"integrity\": \"sha512-RMr0FhtfXemyinomL4hrWcYJxmX6deFdCxpJzhDttxgO1+bcCnkk+9drydLVDmAMG7NE6aN/fl4F7ucU/90gAA==\"\n        },\n        \"combined-stream\": {\n            \"version\": \"1.0.8\",\n            \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n            \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n            \"requires\": {\n                \"delayed-stream\": \"~1.0.0\"\n            }\n        },\n        \"content-disposition\": {\n            \"version\": \"0.5.4\",\n            \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\n            \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\n            \"requires\": {\n                \"safe-buffer\": \"5.2.1\"\n            }\n        },\n        \"content-type\": {\n            \"version\": \"1.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\n            \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\"\n        },\n        \"cookie\": {\n            \"version\": \"0.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz\",\n            \"integrity\": \"sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw==\"\n        },\n        \"cookie-signature\": {\n            \"version\": \"1.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n            \"integrity\": \"sha1-4wOogrNCzD7oylE6eZmXNNqzriw=\"\n        },\n        \"cors\": {\n            \"version\": \"2.8.5\",\n            \"resolved\": \"https://registry.npmjs.org/cors/-/cors-2.8.5.tgz\",\n            \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\n            \"requires\": {\n                \"object-assign\": \"^4\",\n                \"vary\": \"^1\"\n            }\n        },\n        \"debug\": {\n            \"version\": \"2.6.9\",\n            \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n            \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n            \"requires\": {\n                \"ms\": \"2.0.0\"\n            }\n        },\n        \"delayed-stream\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n            \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\"\n        },\n        \"depd\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n            \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\"\n        },\n        \"destroy\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n            \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\"\n        },\n        \"dotenv\": {\n            \"version\": \"16.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.3.1.tgz\",\n            \"integrity\": \"sha512-IPzF4w4/Rd94bA9imS68tZBaYyBWSCE47V1RGuMrB94iyTOIEwRmVL2x/4An+6mETpLrKJ5hQkB8W4kFAadeIQ==\"\n        },\n        \"ecdsa-sig-formatter\": {\n            \"version\": \"1.0.11\",\n            \"resolved\": \"https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz\",\n            \"integrity\": \"sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==\",\n            \"requires\": {\n                \"safe-buffer\": \"^5.0.1\"\n            }\n        },\n        \"ee-first\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n            \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\"\n        },\n        \"encodeurl\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n            \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\"\n        },\n        \"escape-html\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n            \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\"\n        },\n        \"etag\": {\n            \"version\": \"1.8.1\",\n            \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n            \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\"\n        },\n        \"express\": {\n            \"version\": \"4.18.2\",\n            \"resolved\": \"https://registry.npmjs.org/express/-/express-4.18.2.tgz\",\n            \"integrity\": \"sha512-5/PsL6iGPdfQ/lKM1UuielYgv3BUoJfz1aUwU9vHZ+J7gyvwdQXFEBIEIaxeGf0GIcreATNyBExtalisDbuMqQ==\",\n            \"requires\": {\n                \"accepts\": \"~1.3.8\",\n                \"array-flatten\": \"1.1.1\",\n                \"body-parser\": \"1.20.1\",\n                \"content-disposition\": \"0.5.4\",\n                \"content-type\": \"~1.0.4\",\n                \"cookie\": \"0.5.0\",\n                \"cookie-signature\": \"1.0.6\",\n                \"debug\": \"2.6.9\",\n                \"depd\": \"2.0.0\",\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"etag\": \"~1.8.1\",\n                \"finalhandler\": \"1.2.0\",\n                \"fresh\": \"0.5.2\",\n                \"http-errors\": \"2.0.0\",\n                \"merge-descriptors\": \"1.0.1\",\n                \"methods\": \"~1.1.2\",\n                \"on-finished\": \"2.4.1\",\n                \"parseurl\": \"~1.3.3\",\n                \"path-to-regexp\": \"0.1.7\",\n                \"proxy-addr\": \"~2.0.7\",\n                \"qs\": \"6.11.0\",\n                \"range-parser\": \"~1.2.1\",\n                \"safe-buffer\": \"5.2.1\",\n                \"send\": \"0.18.0\",\n                \"serve-static\": \"1.15.0\",\n                \"setprototypeof\": \"1.2.0\",\n                \"statuses\": \"2.0.1\",\n                \"type-is\": \"~1.6.18\",\n                \"utils-merge\": \"1.0.1\",\n                \"vary\": \"~1.1.2\"\n            }\n        },\n        \"express-fileupload\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/express-fileupload/-/express-fileupload-1.4.0.tgz\",\n            \"integrity\": \"sha512-RjzLCHxkv3umDeZKeFeMg8w7qe0V09w3B7oGZprr/oO2H/ISCgNzuqzn7gV3HRWb37GjRk429CCpSLS2KNTqMQ==\",\n            \"requires\": {\n                \"busboy\": \"^1.6.0\"\n            }\n        },\n        \"finalhandler\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz\",\n            \"integrity\": \"sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==\",\n            \"requires\": {\n                \"debug\": \"2.6.9\",\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"on-finished\": \"2.4.1\",\n                \"parseurl\": \"~1.3.3\",\n                \"statuses\": \"2.0.1\",\n                \"unpipe\": \"~1.0.0\"\n            }\n        },\n        \"follow-redirects\": {\n            \"version\": \"1.15.2\",\n            \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.2.tgz\",\n            \"integrity\": \"sha512-VQLG33o04KaQ8uYi2tVNbdrWp1QWxNNea+nmIB4EVM28v0hmP17z7aG1+wAkNzVq4KeXTq3221ye5qTJP91JwA==\"\n        },\n        \"form-data\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz\",\n            \"integrity\": \"sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==\",\n            \"requires\": {\n                \"asynckit\": \"^0.4.0\",\n                \"combined-stream\": \"^1.0.8\",\n                \"mime-types\": \"^2.1.12\"\n            }\n        },\n        \"forwarded\": {\n            \"version\": \"0.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n            \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\"\n        },\n        \"fresh\": {\n            \"version\": \"0.5.2\",\n            \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n            \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\"\n        },\n        \"function-bind\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",\n            \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\"\n        },\n        \"generic-pool\": {\n            \"version\": \"3.9.0\",\n            \"resolved\": \"https://registry.npmjs.org/generic-pool/-/generic-pool-3.9.0.tgz\",\n            \"integrity\": \"sha512-hymDOu5B53XvN4QT9dBmZxPX4CWhBPPLguTZ9MMFeFa/Kg0xWVfylOVNlJji/E7yTZWFd/q9GO5TxDLq156D7g==\"\n        },\n        \"get-intrinsic\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.1.tgz\",\n            \"integrity\": \"sha512-2DcsyfABl+gVHEfCOaTrWgyt+tb6MSEGmKq+kI5HwLbIYgjgmMcV8KQ41uaKz1xxUcn9tJtgFbQUEVcEbd0FYw==\",\n            \"requires\": {\n                \"function-bind\": \"^1.1.1\",\n                \"has\": \"^1.0.3\",\n                \"has-proto\": \"^1.0.1\",\n                \"has-symbols\": \"^1.0.3\"\n            }\n        },\n        \"has\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.3.tgz\",\n            \"integrity\": \"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\",\n            \"requires\": {\n                \"function-bind\": \"^1.1.1\"\n            }\n        },\n        \"has-proto\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.1.tgz\",\n            \"integrity\": \"sha512-7qE+iP+O+bgF9clE5+UoBFzE65mlBiVj3tKCrlNQ0Ogwm0BjpT/gK4SlLYDMybDh5I3TCTKnPPa0oMG7JDYrhg==\"\n        },\n        \"has-symbols\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n            \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\"\n        },\n        \"http-errors\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n            \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n            \"requires\": {\n                \"depd\": \"2.0.0\",\n                \"inherits\": \"2.0.4\",\n                \"setprototypeof\": \"1.2.0\",\n                \"statuses\": \"2.0.1\",\n                \"toidentifier\": \"1.0.1\"\n            }\n        },\n        \"iconv-lite\": {\n            \"version\": \"0.4.24\",\n            \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n            \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n            \"requires\": {\n                \"safer-buffer\": \">= 2.1.2 < 3\"\n            }\n        },\n        \"inherits\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n            \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n        },\n        \"ip\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/ip/-/ip-2.0.0.tgz\",\n            \"integrity\": \"sha512-WKa+XuLG1A1R0UWhl2+1XQSi+fZWMsYKffMZTTYsiZaUD8k2yDAj5atimTUD2TZkyCkNEeYE5NhFZmupOGtjYQ==\"\n        },\n        \"ipaddr.js\": {\n            \"version\": \"1.9.1\",\n            \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n            \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\"\n        },\n        \"jsonwebtoken\": {\n            \"version\": \"9.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.0.tgz\",\n            \"integrity\": \"sha512-tuGfYXxkQGDPnLJ7SibiQgVgeDgfbPq2k2ICcbgqW8WxWLBAxKQM/ZCu/IT8SOSwmaYl4dpTFCW5xZv7YbbWUw==\",\n            \"requires\": {\n                \"jws\": \"^3.2.2\",\n                \"lodash\": \"^4.17.21\",\n                \"ms\": \"^2.1.1\",\n                \"semver\": \"^7.3.8\"\n            },\n            \"dependencies\": {\n                \"ms\": {\n                    \"version\": \"2.1.3\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n                    \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\n                }\n            }\n        },\n        \"jwa\": {\n            \"version\": \"1.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz\",\n            \"integrity\": \"sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==\",\n            \"requires\": {\n                \"buffer-equal-constant-time\": \"1.0.1\",\n                \"ecdsa-sig-formatter\": \"1.0.11\",\n                \"safe-buffer\": \"^5.0.1\"\n            }\n        },\n        \"jws\": {\n            \"version\": \"3.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/jws/-/jws-3.2.2.tgz\",\n            \"integrity\": \"sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==\",\n            \"requires\": {\n                \"jwa\": \"^1.4.1\",\n                \"safe-buffer\": \"^5.0.1\"\n            }\n        },\n        \"kareem\": {\n            \"version\": \"2.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/kareem/-/kareem-2.5.1.tgz\",\n            \"integrity\": \"sha512-7jFxRVm+jD+rkq3kY0iZDJfsO2/t4BBPeEb2qKn2lR/9KhuksYk5hxzfRYWMPV8P/x2d0kHD306YyWLzjjH+uA==\"\n        },\n        \"lodash\": {\n            \"version\": \"4.17.21\",\n            \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n            \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\"\n        },\n        \"lru-cache\": {\n            \"version\": \"6.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n            \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n            \"requires\": {\n                \"yallist\": \"^4.0.0\"\n            }\n        },\n        \"media-typer\": {\n            \"version\": \"0.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n            \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\"\n        },\n        \"memory-pager\": {\n            \"version\": \"1.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz\",\n            \"integrity\": \"sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==\",\n            \"optional\": true\n        },\n        \"merge-descriptors\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\n            \"integrity\": \"sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=\"\n        },\n        \"methods\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n            \"integrity\": \"sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=\"\n        },\n        \"mime\": {\n            \"version\": \"1.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n            \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\"\n        },\n        \"mime-db\": {\n            \"version\": \"1.52.0\",\n            \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n            \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\"\n        },\n        \"mime-types\": {\n            \"version\": \"2.1.35\",\n            \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n            \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n            \"requires\": {\n                \"mime-db\": \"1.52.0\"\n            }\n        },\n        \"mongodb\": {\n            \"version\": \"5.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/mongodb/-/mongodb-5.6.0.tgz\",\n            \"integrity\": \"sha512-z8qVs9NfobHJm6uzK56XBZF8XwM9H294iRnB7wNjF0SnY93si5HPziIJn+qqvUR5QOff/4L0gCD6SShdR/GtVQ==\",\n            \"requires\": {\n                \"bson\": \"^5.3.0\",\n                \"mongodb-connection-string-url\": \"^2.6.0\",\n                \"saslprep\": \"^1.0.3\",\n                \"socks\": \"^2.7.1\"\n            }\n        },\n        \"mongodb-connection-string-url\": {\n            \"version\": \"2.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-2.6.0.tgz\",\n            \"integrity\": \"sha512-WvTZlI9ab0QYtTYnuMLgobULWhokRjtC7db9LtcVfJ+Hsnyr5eo6ZtNAt3Ly24XZScGMelOcGtm7lSn0332tPQ==\",\n            \"requires\": {\n                \"@types/whatwg-url\": \"^8.2.1\",\n                \"whatwg-url\": \"^11.0.0\"\n            }\n        },\n        \"mongoose\": {\n            \"version\": \"7.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/mongoose/-/mongoose-7.3.0.tgz\",\n            \"integrity\": \"sha512-gvkV5qxmBkGohlk7VTeePMPM2OkQPeqVYZHvjoM4goOIK6G1eSfJMZwXV21asivXxlaz6OuP29TfGAKrKooDAg==\",\n            \"requires\": {\n                \"bson\": \"^5.3.0\",\n                \"kareem\": \"2.5.1\",\n                \"mongodb\": \"5.6.0\",\n                \"mpath\": \"0.9.0\",\n                \"mquery\": \"5.0.0\",\n                \"ms\": \"2.1.3\",\n                \"sift\": \"16.0.1\"\n            },\n            \"dependencies\": {\n                \"ms\": {\n                    \"version\": \"2.1.3\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n                    \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\n                }\n            }\n        },\n        \"mpath\": {\n            \"version\": \"0.9.0\",\n            \"resolved\": \"https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz\",\n            \"integrity\": \"sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==\"\n        },\n        \"mquery\": {\n            \"version\": \"5.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/mquery/-/mquery-5.0.0.tgz\",\n            \"integrity\": \"sha512-iQMncpmEK8R8ncT8HJGsGc9Dsp8xcgYMVSbs5jgnm1lFHTZqMJTUWTDx1LBO8+mK3tPNZWFLBghQEIOULSTHZg==\",\n            \"requires\": {\n                \"debug\": \"4.x\"\n            },\n            \"dependencies\": {\n                \"debug\": {\n                    \"version\": \"4.3.4\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n                    \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n                    \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n                }\n            }\n        },\n        \"ms\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n            \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"\n        },\n        \"negotiator\": {\n            \"version\": \"0.6.3\",\n            \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n            \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\"\n        },\n        \"object-assign\": {\n            \"version\": \"4.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n            \"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\"\n        },\n        \"object-inspect\": {\n            \"version\": \"1.12.3\",\n            \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.3.tgz\",\n            \"integrity\": \"sha512-geUvdk7c+eizMNUDkRpW1wJwgfOiOeHbxBR/hLXK1aT6zmVSO0jsQcs7fj6MGw89jC/cjGfLcNOrtMYtGqm81g==\"\n        },\n        \"on-finished\": {\n            \"version\": \"2.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n            \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n            \"requires\": {\n                \"ee-first\": \"1.1.1\"\n            }\n        },\n        \"parseurl\": {\n            \"version\": \"1.3.3\",\n            \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n            \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\"\n        },\n        \"path-to-regexp\": {\n            \"version\": \"0.1.7\",\n            \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\n            \"integrity\": \"sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=\"\n        },\n        \"proxy-addr\": {\n            \"version\": \"2.0.7\",\n            \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n            \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n            \"requires\": {\n                \"forwarded\": \"0.2.0\",\n                \"ipaddr.js\": \"1.9.1\"\n            }\n        },\n        \"proxy-from-env\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\n            \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\"\n        },\n        \"punycode\": {\n            \"version\": \"2.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz\",\n            \"integrity\": \"sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==\"\n        },\n        \"qs\": {\n            \"version\": \"6.11.0\",\n            \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.11.0.tgz\",\n            \"integrity\": \"sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==\",\n            \"requires\": {\n                \"side-channel\": \"^1.0.4\"\n            }\n        },\n        \"range-parser\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n            \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\"\n        },\n        \"raw-body\": {\n            \"version\": \"2.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz\",\n            \"integrity\": \"sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==\",\n            \"requires\": {\n                \"bytes\": \"3.1.2\",\n                \"http-errors\": \"2.0.0\",\n                \"iconv-lite\": \"0.4.24\",\n                \"unpipe\": \"1.0.0\"\n            }\n        },\n        \"redis\": {\n            \"version\": \"4.6.7\",\n            \"resolved\": \"https://registry.npmjs.org/redis/-/redis-4.6.7.tgz\",\n            \"integrity\": \"sha512-KrkuNJNpCwRm5vFJh0tteMxW8SaUzkm5fBH7eL5hd/D0fAkzvapxbfGPP/r+4JAXdQuX7nebsBkBqA2RHB7Usw==\",\n            \"requires\": {\n                \"@redis/bloom\": \"1.2.0\",\n                \"@redis/client\": \"1.5.8\",\n                \"@redis/graph\": \"1.1.0\",\n                \"@redis/json\": \"1.0.4\",\n                \"@redis/search\": \"1.1.3\",\n                \"@redis/time-series\": \"1.0.4\"\n            }\n        },\n        \"safe-buffer\": {\n            \"version\": \"5.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n            \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\"\n        },\n        \"safer-buffer\": {\n            \"version\": \"2.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n            \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\n        },\n        \"saslprep\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/saslprep/-/saslprep-1.0.3.tgz\",\n            \"integrity\": \"sha512-/MY/PEMbk2SuY5sScONwhUDsV2p77Znkb/q3nSVstq/yQzYJOH/Azh29p9oJLsl3LnQwSvZDKagDGBsBwSooag==\",\n            \"optional\": true,\n            \"requires\": {\n                \"sparse-bitfield\": \"^3.0.3\"\n            }\n        },\n        \"semver\": {\n            \"version\": \"7.5.2\",\n            \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.5.2.tgz\",\n            \"integrity\": \"sha512-SoftuTROv/cRjCze/scjGyiDtcUyxw1rgYQSZY7XTmtR5hX+dm76iDbTH8TkLPHCQmlbQVSSbNZCPM2hb0knnQ==\",\n            \"requires\": {\n                \"lru-cache\": \"^6.0.0\"\n            }\n        },\n        \"send\": {\n            \"version\": \"0.18.0\",\n            \"resolved\": \"https://registry.npmjs.org/send/-/send-0.18.0.tgz\",\n            \"integrity\": \"sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==\",\n            \"requires\": {\n                \"debug\": \"2.6.9\",\n                \"depd\": \"2.0.0\",\n                \"destroy\": \"1.2.0\",\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"etag\": \"~1.8.1\",\n                \"fresh\": \"0.5.2\",\n                \"http-errors\": \"2.0.0\",\n                \"mime\": \"1.6.0\",\n                \"ms\": \"2.1.3\",\n                \"on-finished\": \"2.4.1\",\n                \"range-parser\": \"~1.2.1\",\n                \"statuses\": \"2.0.1\"\n            },\n            \"dependencies\": {\n                \"ms\": {\n                    \"version\": \"2.1.3\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n                    \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\n                }\n            }\n        },\n        \"serve-static\": {\n            \"version\": \"1.15.0\",\n            \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz\",\n            \"integrity\": \"sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==\",\n            \"requires\": {\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"parseurl\": \"~1.3.3\",\n                \"send\": \"0.18.0\"\n            }\n        },\n        \"setprototypeof\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n            \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\n        },\n        \"side-channel\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz\",\n            \"integrity\": \"sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==\",\n            \"requires\": {\n                \"call-bind\": \"^1.0.0\",\n                \"get-intrinsic\": \"^1.0.2\",\n                \"object-inspect\": \"^1.9.0\"\n            }\n        },\n        \"sift\": {\n            \"version\": \"16.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/sift/-/sift-16.0.1.tgz\",\n            \"integrity\": \"sha512-Wv6BjQ5zbhW7VFefWusVP33T/EM0vYikCaQ2qR8yULbsilAT8/wQaXvuQ3ptGLpoKx+lihJE3y2UTgKDyyNHZQ==\"\n        },\n        \"smart-buffer\": {\n            \"version\": \"4.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n            \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\"\n        },\n        \"socks\": {\n            \"version\": \"2.7.1\",\n            \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.7.1.tgz\",\n            \"integrity\": \"sha512-7maUZy1N7uo6+WVEX6psASxtNlKaNVMlGQKkG/63nEDdLOWNbiUMoLK7X4uYoLhQstau72mLgfEWcXcwsaHbYQ==\",\n            \"requires\": {\n                \"ip\": \"^2.0.0\",\n                \"smart-buffer\": \"^4.2.0\"\n            }\n        },\n        \"sparse-bitfield\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz\",\n            \"integrity\": \"sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==\",\n            \"optional\": true,\n            \"requires\": {\n                \"memory-pager\": \"^1.0.2\"\n            }\n        },\n        \"statuses\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n            \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\"\n        },\n        \"streamsearch\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz\",\n            \"integrity\": \"sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==\"\n        },\n        \"toidentifier\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n            \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\"\n        },\n        \"tr46\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-3.0.0.tgz\",\n            \"integrity\": \"sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==\",\n            \"requires\": {\n                \"punycode\": \"^2.1.1\"\n            }\n        },\n        \"type-is\": {\n            \"version\": \"1.6.18\",\n            \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\n            \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n            \"requires\": {\n                \"media-typer\": \"0.3.0\",\n                \"mime-types\": \"~2.1.24\"\n            }\n        },\n        \"typescript\": {\n            \"version\": \"5.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.1.3.tgz\",\n            \"integrity\": \"sha512-XH627E9vkeqhlZFQuL+UsyAXEnibT0kWR2FWONlr4sTjvxyJYnyefgrkyECLzM5NenmKzRAy2rR/OlYLA1HkZw==\"\n        },\n        \"unpipe\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n            \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\"\n        },\n        \"utils-merge\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n            \"integrity\": \"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\"\n        },\n        \"vary\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n            \"integrity\": \"sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=\"\n        },\n        \"webidl-conversions\": {\n            \"version\": \"7.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n            \"integrity\": \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\"\n        },\n        \"whatwg-url\": {\n            \"version\": \"11.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-11.0.0.tgz\",\n            \"integrity\": \"sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==\",\n            \"requires\": {\n                \"tr46\": \"^3.0.0\",\n                \"webidl-conversions\": \"^7.0.0\"\n            }\n        },\n        \"yallist\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n            \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\"\n        }\n    }\n}\n"},{"path":"\\package.json","content":"{\n    \"name\": \"qbic.backend\",\n    \"version\": \"1.0.0\",\n    \"description\": \"\",\n    \"main\": \"app.ts\",\n    \"scripts\": {\n        \"start\": \"npx tsc && node dist/app.js\",\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n    },\n    \"keywords\": [],\n    \"author\": \"\",\n    \"license\": \"ISC\",\n    \"dependencies\": {\n        \"@types/bcryptjs\": \"^2.4.2\",\n        \"@types/cors\": \"^2.8.13\",\n        \"@types/express\": \"^4.17.17\",\n        \"@types/express-fileupload\": \"^1.4.1\",\n        \"@types/jsonwebtoken\": \"^9.0.2\",\n        \"axios\": \"^1.4.0\",\n        \"bcryptjs\": \"^2.4.3\",\n        \"cors\": \"^2.8.5\",\n        \"dotenv\": \"^16.3.1\",\n        \"express\": \"^4.18.2\",\n        \"express-fileupload\": \"^1.4.0\",\n        \"jsonwebtoken\": \"^9.0.0\",\n        \"mongoose\": \"^7.3.0\",\n        \"redis\": \"^4.6.7\",\n        \"typescript\": \"^5.1.3\"\n    }\n}\n"},{"path":"\\src\\db\\mongoose.ts","content":"import mongoose from 'mongoose'\nimport Role from '../model/admin/role.js'\nimport User from '../model/profile/user.js'\nimport { generalApply } from '../utilities.js'\nconsole.log(`mongodb://${process.env.DB_HOST}:27017/${process.env.DB_NAME}?authSource=admin`)\nconst mainDB = mongoose.createConnection(`mongodb://${process.env.DB_HOST}:27017/${process.env.DB_NAME}?authSource=admin`, {\n    user: process.env.DB_USER,\n    pass: process.env.DB_PASSWORD,\n})\nexport const model = <type, model>(name: string, schema: any) => {\n    schema.add({\n        deleted: {\n            type: Boolean,\n            default: false,\n        },\n    })\n    return mainDB.model<type, model>(name, schema)\n}\n\nexport default mainDB\n"},{"path":"\\src\\db\\redis.ts","content":"import { createClient, RedisClientType } from 'redis'\n\nconst socket: { port?: number; host?: string } = {}\nif (process.env.REDIS_PORT && !isNaN(+process.env.REDIS_PORT)) {\n    socket.port = +process.env.REDIS_PORT\n}\nif (process.env.REDIS_HOST) {\n    socket.host = process.env.REDIS_HOST\n}\n\ninterface IRedis {\n    client: RedisClientType\n    setJ(key: string, value: any): void\n    getJ(key: string): Promise<any>\n    delJ(key: string): void\n}\n\nlet preClient: RedisClientType | null = null\nlet customClient: IRedis | null = null\n\nexport default function getRedis() {\n    if (!preClient || !customClient) {\n        console.log('creating redis client...')\n        preClient = createClient({\n            socket,\n            password: process.env.REDIS_PASSWORD,\n        }) as RedisClientType\n        preClient.connect()\n        preClient.on('end', (a: any) => {\n            console.log('redis ended')\n        })\n        preClient.on('connect', (a: any) => {\n            console.log('redis connected')\n        })\n        preClient.on('error', (e) => {})\n        customClient = {\n            client: preClient,\n            setJ: async (key: string, value: any) => {\n                if (!preClient) throw new Error('redis client could not be found')\n                await preClient.set(key, JSON.stringify(value))\n            },\n            getJ: async (key: string) => {\n                if (!preClient) throw new Error('redis client could not be found')\n                const value = await preClient.get(key)\n                if (!value) return null\n                return JSON.parse(value)\n            },\n            delJ: async (key: string) => {\n                if (!preClient) throw new Error('redis client could not be found')\n                await preClient.del(key)\n            },\n        }\n    }\n    return customClient\n}\n"},{"path":"\\src\\middleware\\authentication.ts","content":"import { Request, Response } from 'express'\nimport jwt from 'jsonwebtoken'\nimport Admin, { IAdmin } from '../model/admin/admin'\nimport API from '../model/admin/api'\nimport User, { IUser } from '../model/profile/user'\n\nexport const auth = (mode: 1 | 2 | 3 | 4, strict = true) => {\n    return async (req: Request, res: Response, next: Function) => {\n        try {\n            let token = req.header('Authorization')\n            if (!token) token = req.cookies.token\n            if (!token && strict) {\n                res.status(401).send({ error: 'Authentication Failed' })\n                return\n            }\n            if (!token) token = ''\n            token = token.replace('Bearer ', '')\n            if (mode == 1) {\n                const admin = await adminAuthenticateToken(token)\n                if (!admin) {\n                    res.status(401).send({ error: 'Authentication Failed' })\n                    return\n                }\n                const authorized = await isAuthorized(admin, req.route.path, req.method.toLowerCase())\n                if (!authorized) {\n                    res.status(403).send({ error: 'Forbidden' })\n                    return\n                }\n                req.admin = admin\n                req.token = token\n                next()\n            }\n            if (mode == 2) {\n                const user = await userAuthenticateToken(token)\n                if (!user) {\n                    res.status(401).send({ error: 'Authentication Failed' })\n                    return\n                } else {\n                    req.user = user\n                    req.token = token\n                }\n                next()\n            }\n            if (mode == 3) {\n                const user = await userAuthenticateToken(token)\n                if (user) {\n                    req.user = user\n                    req.token = token\n                    next()\n                    return\n                }\n                const admin = await adminAuthenticateToken(token)\n                if (!admin) {\n                    res.status(401).send({ error: 'Authentication Failed' })\n                    return\n                }\n                const authorized = await isAuthorized(admin, req.route.path, req.method.toLowerCase())\n                if (!authorized) {\n                    res.status(403).send({ error: 'Forbidden' })\n                    return\n                }\n                req.admin = admin\n                req.token = token\n                next()\n            }\n        } catch (e) {}\n    }\n}\n\nexport const userAuthenticateToken = async (token: string) => {\n    try {\n        if (!process.env.JWT_SECRET) return null\n        const decoded = jwt.verify(token, process.env.JWT_SECRET) as { id: string }\n        const user = await User.findOne({ _id: decoded.id, 'sessions.token': token, deleted: false })\n        if (!user) return null\n        for (let i = 0; i < user.sessions.length; i++) {\n            if (user.sessions[i].token == token) {\n                if (Date.now() - user.sessions[i].lastTimeUsed < 24 * 86400 * 1000) {\n                    user.sessions[i].lastTimeUsed = Date.now()\n                    await user.save()\n                    return user\n                } else {\n                    user.sessions = user.sessions.splice(i, 1)\n                    await user.save()\n                }\n            }\n        }\n        return null\n    } catch (e) {\n        return null\n    }\n}\n\nexport const adminAuthenticateToken = async (token: string) => {\n    try {\n        if (!process.env.JWT_SECRET) return null\n        const decoded = jwt.verify(token, process.env.JWT_SECRET) as { id: string }\n        const admin = await Admin.findOne({ _id: decoded.id })\n        return admin\n    } catch (e) {\n        return null\n    }\n}\n\nexport const isAuthorized = async (admin: IAdmin, route: string, method: string) => {\n    const api = await API.findOne({\n        route,\n        method,\n    })\n    if (!api) {\n        return false\n    }\n    let authorized = false\n\n    const adminRoles = await admin.getRoles()\n    for (let j = 0; j < adminRoles.length; j++) {\n        if (adminRoles[j].name === 'GOD') {\n            authorized = true\n        }\n\n        const apis = await adminRoles[j].getAPIs()\n        for (let i = 0; i < apis.length; i++) {\n            if (apis[i].route === api.route && apis[i].method === api.method) {\n                authorized = true\n            }\n        }\n    }\n    return authorized\n}\n"},{"path":"\\src\\middleware\\checkInput.ts","content":"import { Request, Response } from 'express'\nimport fs from 'fs'\nimport API from '../model/admin/api'\n\nconst checkInput = async (req: Request, res: Response, next: Function) => {\n    let ou = req.originalUrl.replace('/api/v2/', '/')\n    if (ou.endsWith('/')) ou = ou.substring(0, ou.length - 1)\n    const allApis = await API.find({ method: req.method.toLowerCase() })\n    let valids = allApis.filter((s) => s.route === ou)\n    if (valids.length > 1) {\n        res.status(400).send({ error: 'call backend about this api' })\n        return\n    }\n    let api = null\n    if (valids.length === 1) {\n        api = valids[0]\n    } else {\n        let ouParts = ou.split('/')\n        ouParts.shift()\n        for (let i = 0; i < allApis.length; i++) {\n            const s = allApis[i]\n            const variableList = []\n            const route = s.route\n            const routeParts = route.split(':')\n            routeParts.shift()\n            for (let i = 0; i < routeParts.length; i++) {\n                variableList.push(routeParts[i].split('/')[0])\n            }\n\n            if (variableList.length > 0) {\n                const arr = permute(ouParts)\n                for (let j = 0; j < arr.length; j++) {\n                    let newRoute = route\n                    for (let k = 0; k < variableList.length; k++) {\n                        newRoute = newRoute.replace(':' + variableList[k], arr[j][k])\n                    }\n                    if (newRoute === ou) {\n                        if (api && api.id !== s.id) {\n                            res.status(400).send({ error: 'call backend about this api' })\n                            return\n                        } else {\n                            api = s\n                        }\n                    }\n                }\n                permArr = []\n                usedChars = []\n            }\n        }\n    }\n    if (api) {\n        if (api.validInputs && api.validInputs.length > 0) {\n            const filteredBody: any = {} // this is body sent by user, could be ANY thing\n            for (let i = 0; i < api.validInputs.length; i++) {\n                if (req.body[api.validInputs[i]]) {\n                    filteredBody[api.validInputs[i]] = req.body[api.validInputs[i]]\n                }\n            }\n            req.body = filteredBody\n        }\n        if (api.requiredInputs && api.requiredInputs.length > 0) {\n            for (let i = 0; i < api.requiredInputs.length; i++) {\n                if (!req.body[api.requiredInputs[i]]) {\n                    res.status(400).send({ error: api.requiredInputs[i] + ' is missing' })\n                    return\n                }\n            }\n        }\n        const keys = Object.keys(req.body)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i]\n            if (key.endsWith('Id') && key.charAt(0) === key.charAt(0).toUpperCase()) {\n                const exists = await checkforeign(key.substr(0, key.length - 2), req.body[key])\n                if (!exists) {\n                    res.status(400).send({ error: key + ' not found' })\n                    return\n                }\n            }\n        }\n        if (api.foreignKeys && api.foreignKeys.length > 0) {\n            for (let i = 0; i < api.foreignKeys.length; i++) {\n                const key = api.foreignKeys[i].split('|')[0]\n                const className = api.foreignKeys[i].split('|')[1]\n                if (req.body[key]) {\n                    const exists = await checkforeign(className, req.body[key])\n                    if (!exists) {\n                        res.status(400).send({ error: key + ' not found' })\n                        return\n                    }\n                }\n            }\n        }\n    }\n    next()\n}\n\nconst checkforeign = async (className: string, id: string) => {\n    return true //TODO\n    // try {\n    //     const files = await listFiles([], process.cwd() + '/src/model')\n    //     if (!files) return false\n    //     for (const file of files) {\n    //         const Model = require(file.path)\n    //         if (Model.modelName == className) {\n    //             let instance = null\n    //             try {\n    //                 instance = await Model.findById(id)\n    //             } catch (e) { }\n    //             if (!instance) {\n    //                 try {\n    //                     instance = await Model.find2(id)\n    //                 } catch (e) { }\n    //             }\n    //             if (!instance) {\n    //                 return false\n    //             } else {\n    //                 return true\n    //             }\n    //         }\n    //     }\n    // } catch (e) {\n    //     return false\n    // }\n}\n\nlet permArr: string[] = [],\n    usedChars: string[] = []\n\nfunction permute(input: string[]) {\n    var i, ch\n    for (i = 0; i < input.length; i++) {\n        ch = input.splice(i, 1)[0]\n        usedChars.push(ch)\n        if (input.length == 0) {\n            permArr.push(...usedChars.slice())\n        }\n        permute(input)\n        input.splice(i, 0, ch)\n        usedChars.pop()\n    }\n    return permArr\n}\n\nconst listFiles = (result: { name: string; path: string }[], dir: string) => {\n    try {\n        if (!result) result = []\n        const files = fs.readdirSync(dir)\n        for (let i = 0; i < files.length; i++) {\n            if (fs.lstatSync(dir + '/' + files[i]).isDirectory()) {\n                const recursive = listFiles(result, dir + '/' + files[i])\n                if (recursive) result = recursive\n            } else {\n                result.push({ name: files[i], path: dir + '/' + files[i] })\n            }\n        }\n        return result\n    } catch (e) {\n        if (e instanceof Error) console.log(e.stack)\n    }\n}\n\nexport default checkInput\n"},{"path":"\\src\\model\\admin\\admin.ts","content":"import bcrypt from 'bcryptjs'\nimport mongoose, { Document, Model, Types } from 'mongoose'\nimport jwt from 'jsonwebtoken'\nimport mainDB, { model } from '../../db/mongoose'\nimport Role, { IRole } from './role'\nimport CDocument from '../../../CustomDocument.js'\nimport { generalApply } from '../../utilities.js'\nconst Schema = mongoose.Schema\n\nexport interface IAdmin extends CDocument {\n    password: string\n    username: string\n    loginCount: number\n    lastLogin: number\n    lastIP: string\n    tokens: string[]\n    roles: Types.ObjectId[]\n    generateToken(): string\n    addRole(role: IRole): void\n    getRoles(): IRole[]\n    removeRole(role: IRole): void\n}\ninterface AdminModel extends Model<IAdmin> {\n    findByCredentials(username: string, password: string): IAdmin\n}\n\nconst adminSchema = new Schema<IAdmin>(\n    {\n        username: {\n            type: String,\n            default: '',\n            required: true,\n            unique: true,\n            sparse: true,\n        },\n        password: {\n            type: String,\n            default: '',\n        },\n        loginCount: {\n            type: Number,\n            default: 1,\n        },\n        lastLogin: {\n            type: Number,\n        },\n        lastIP: {\n            type: String,\n        },\n        tokens: {\n            type: [String],\n            default: [],\n        },\n        roles: [{ type: Schema.Types.ObjectId, ref: 'Role' }],\n    },\n    { timestamps: true }\n)\n\nadminSchema.pre('save', async function (next) {\n    const admin = this\n    if (admin.isModified('password')) {\n        admin.password = await bcrypt.hash(admin.password, 8)\n    }\n\n    next()\n})\n\nadminSchema.statics.findByCredentials = async (username, password) => {\n    try {\n        const admin = await Admin.findOne({ username })\n        if (!admin) {\n            throw new Error('Wrong Username or Password')\n        } else {\n            const isPasswordCorrect = await bcrypt.compare(password.toString(), admin.password)\n            if (!isPasswordCorrect) {\n                throw new Error('Wrong Username or Password')\n            } else {\n                return admin\n            }\n        }\n    } catch (e) {\n        throw new Error('Wrong Username or Password')\n    }\n}\n\nadminSchema.methods.toJSON = function () {\n    const modelObject = this.toObject() as any\n    delete modelObject.lastIP\n    delete modelObject.lastLogin\n    delete modelObject.loginCount\n    delete modelObject.password\n    delete modelObject.tokens\n    return modelObject\n}\n\nadminSchema.methods.generateToken = async function () {\n    try {\n        if (!process.env.JWT_SECRET) throw new Error('no jwt secret found')\n        const admin = this\n        const token = jwt.sign({ id: admin.id.toString() }, process.env.JWT_SECRET)\n        admin.tokens = admin.tokens.concat(token)\n        await admin.save()\n        return token\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nadminSchema.methods.getRoles = async function () {\n    const admin = this\n    const roleIds = admin.roles\n    const roles = []\n    for (let i = 0; i < roleIds.length; i++) {\n        const role = await Role.findById(roleIds[i])\n        //const roleJSON = role.toJSON()\n        roles.push(role)\n    }\n    return roles\n}\n\nadminSchema.methods.addRole = async function (role: IRole) {\n    const admin = this\n    if (!admin.roles.includes(role.id)) {\n        role.admins = role.admins.concat(admin.id)\n        admin.roles = admin.roles.concat(role.id)\n        await role.save()\n        await admin.save()\n    } else {\n        console.log('already assigned')\n    }\n}\n\nadminSchema.methods.removeRole = async function (role: IRole) {\n    const admin = this\n    role.admins = role.admins.filter((s: Types.ObjectId) => !s.equals(admin.id))\n    admin.roles = admin.roles.filter((s: Types.ObjectId) => !s.equals(role.id))\n    await role.save()\n    await admin.save()\n}\n\nadminSchema.methods.apply = async function (id: string, ip: string) {\n    await generalApply(id, this, Admin, ip)\n}\n\nconst Admin = model<IAdmin, AdminModel>('Admin', adminSchema)\n\nexport default Admin\n"},{"path":"\\src\\model\\admin\\api.ts","content":"import mongoose, { Document, Model, ObjectId, Types } from 'mongoose'\nimport CDocument from '../../../CustomDocument.js'\nimport mainDB, { model } from '../../db/mongoose'\nimport { generalApply } from '../../utilities.js'\nconst Schema = mongoose.Schema\n\nexport interface IAPI extends CDocument {\n    route: string\n    method: string\n    routerFile: string\n    validInputs: string[]\n    requiredInputs: string[]\n    foreignKeys: string[]\n}\n\ninterface APIModel extends Model<IAPI> {\n    findOrCreate(data: any): IAPI\n}\n\nconst apiSchema = new Schema<IAPI>(\n    {\n        route: {\n            type: String,\n        },\n        method: {\n            type: String,\n        },\n        routerFile: {\n            type: String,\n        },\n        validInputs: [String],\n        requiredInputs: [String],\n        foreignKeys: [String],\n    },\n    { timestamps: true }\n)\n\napiSchema.statics.findOrCreate = async (data) => {\n    let doc: any = await API.findOne({ route: data.route, method: data.method })\n    if (doc) {\n        doc.validInputs = data.validInputs\n        doc.requiredInputs = data.requiredInputs\n        doc.foreignKeys = data.foreignKeys\n        await doc.save()\n        return doc\n    }\n    doc = await API.create(data)\n    return doc\n}\n\napiSchema.methods.apply = async function (id: string, ip: string) {\n    await generalApply(id, this, API, ip)\n}\n\nconst API = model<IAPI, APIModel>('API', apiSchema)\nexport default API\n"},{"path":"\\src\\model\\admin\\role.ts","content":"import mongoose, { Document, Model, Types } from 'mongoose'\nimport CDocument from '../../../CustomDocument.js'\nimport mainDB, { model } from '../../db/mongoose'\nimport { generalApply } from '../../utilities.js'\nimport API, { IAPI } from './api'\nconst Schema = mongoose.Schema\nexport interface IRole extends CDocument {\n    name: string\n    apis: { route: string; method: string }[]\n    admins: Types.ObjectId[]\n    addAPI(api: IAPI): void\n    removeAPI(api: IAPI): void\n    getAPIs(): IAPI[]\n}\n\ninterface RoleModel extends Model<IRole> {}\n\nconst roleSchema = new mongoose.Schema<IRole>(\n    {\n        name: {\n            type: String,\n            unique: true,\n            sparse: true,\n        },\n        apis: [\n            {\n                route: {\n                    type: String,\n                },\n                method: {\n                    type: String,\n                },\n            },\n        ],\n        admins: [{ type: Schema.Types.ObjectId, ref: 'Admin' }],\n    },\n    { timestamps: true }\n)\n\nroleSchema.methods.getAPIs = async function () {\n    const role = this\n    const apis = []\n    for (let i = 0; i < role.apis.length; i++) {\n        apis.push(await API.findOne({ route: role.apis[i].route, method: role.apis[i].method }))\n    }\n    return apis\n}\n\nroleSchema.methods.toJSON = function () {\n    const modelObject = this.toObject() as any\n    delete modelObject.admins\n    // delete modelObject.apis\n    return modelObject\n}\n\nroleSchema.methods.addAPI = async function (api: IAPI) {\n    const role = this\n    const currentAPIs = role.apis\n    let exists = false\n    for (let i = 0; i < currentAPIs.length; i++) {\n        if (currentAPIs[i].route === api.route && currentAPIs[i].method === api.method) {\n            exists = true\n        }\n    }\n    if (!exists) {\n        role.apis = role.apis.concat({ route: api.route, method: api.method })\n        await role.save()\n    }\n}\n\nroleSchema.methods.removeAPI = async function (api: IAPI) {\n    const role = this\n    role.apis = role.apis.filter((s: { route: any; method: any }) => {\n        return !(s.route === api.route && s.method === api.method)\n    })\n    await role.save()\n}\n\nroleSchema.methods.apply = async function (id: string, ip: string) {\n    await generalApply(id, this, Role, ip)\n}\n\nconst Role = model<IRole, RoleModel>('Role', roleSchema)\nexport default Role\n"},{"path":"\\src\\model\\maintenance\\audit.ts","content":"import mongoose, { Document, Model, Types } from 'mongoose'\nimport mainDB, { model } from '../../db/mongoose'\nconst Schema = mongoose.Schema\nimport CDocument from '../../../CustomDocument.js'\n\nexport interface IAudit extends CDocument {\n    type: string\n    col: string\n    docId: string\n    change: object\n    AdminId: Types.ObjectId\n    UserId: Types.ObjectId\n    TeamId: Types.ObjectId\n    ip: string\n}\n\ninterface AuditModel extends Model<IAudit> {}\n\nconst auditSchema = new mongoose.Schema<IAudit>(\n    {\n        type: String,\n        col: String,\n        docId: String,\n        change: Object,\n        AdminId: {\n            type: Schema.Types.ObjectId,\n            ref: 'Admin',\n        },\n        UserId: {\n            type: Schema.Types.ObjectId,\n            ref: 'User',\n        },\n        TeamId: {\n            type: Schema.Types.ObjectId,\n            ref: 'Team',\n        },\n        ip: String,\n    },\n    { timestamps: true }\n)\n\nconst Audit = model<IAudit, AuditModel>('Audit', auditSchema)\nexport default Audit\n"},{"path":"\\src\\model\\maintenance\\constant.ts","content":"export const teamMemberStatusTypes = ['pending', 'joined']\nexport const teamMemberRoleTypes = ['owner', 'biller', 'member']\n\nimport mongoose, { Document, Model } from 'mongoose'\nimport CDocument from '../../../CustomDocument'\nimport mainDB, { model } from '../../db/mongoose'\nimport { generalApply } from '../../utilities.js'\nimport { IAdmin } from '../admin/admin'\nconst Schema = mongoose.Schema\n\nexport interface IConstant extends CDocument {\n    key: string\n    values: string[]\n}\n\ninterface ConstantModel extends Model<IConstant> {}\n\nconst constantSchema = new Schema<IConstant>({\n    key: {\n        type: String,\n        unique: true,\n        sparse: true,\n    },\n    values: [\n        {\n            type: String,\n        },\n    ],\n})\n\nconstantSchema.methods.apply = async function (id: string, ip: string) {\n    await generalApply(id, this, Constant, ip)\n}\n\nconst Constant = model<IConstant, ConstantModel>('Constant', constantSchema)\nexport default Constant\n"},{"path":"\\src\\model\\profile\\user.ts","content":"import bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\nimport mongoose, { Model, Types } from 'mongoose'\nimport CDocument from '../../../CustomDocument.js'\nimport { model } from '../../db/mongoose.js'\nimport { generalApply } from '../../utilities.js'\nconst Schema = mongoose.Schema\nexport interface IUser extends CDocument {\n    username: string\n    password: string\n    sessions: { token: string; lastTimeUsed: number }[]\n    generateToken(): string\n}\ninterface UserModel extends Model<IUser> {\n    findByCredentials(login: string, password: string): IUser\n}\n\nconst userSchema = new mongoose.Schema<IUser>(\n    {\n        username: {\n            type: String,\n            unique: true,\n            sparse: true,\n        },\n        password: {\n            type: String,\n        },\n        sessions: [{ token: String, lastTimeUsed: Number }]\n    },\n    { timestamps: true }\n)\n\nuserSchema.pre('save', async function (next) {\n    const user = this\n    if (user.isModified('password') && user.password) {\n        user.password = await bcrypt.hash(user.password, 8)\n    }\n\n    next()\n})\n\nuserSchema.statics.findByCredentials = async (login, password) => {\n    try {\n        const user = await User.findOne({\n            $or: [{ username: login }, { email: login }, { phone: login }],\n        })\n        if (!user) {\n            throw new Error('User not found')\n        } else {\n            const isPasswordCorrect = await bcrypt.compare(password.toString(), user.password)\n            if (!isPasswordCorrect) {\n                throw new Error('User not found')\n            } else {\n                return user\n            }\n        }\n    } catch (e: any) {\n        throw new Error('User not found')\n    }\n}\n\nuserSchema.methods.generateToken = async function () {\n    try {\n        if (!process.env.JWT_SECRET) throw new Error('no jwt secret found')\n        const user = this\n        const token = jwt.sign(\n            {\n                id: user.id.toString(),\n            },\n            process.env.JWT_SECRET\n        )\n        user.sessions = user.sessions.concat({ token, lastTimeUsed: Date.now() })\n        await user.save()\n        return token\n    } catch (e) {\n        console.log(e)\n    }\n}\n\n\nuserSchema.methods.toJSON = function () {\n    const modelObject = this.toObject() as any\n    delete modelObject.password\n    return modelObject\n}\n\nuserSchema.methods.apply = async function (id: string, ip: string) {\n    await generalApply(id, this, User, ip)\n}\n\nconst User = model<IUser, UserModel>('User', userSchema)\nexport default User\n"},{"path":"\\src\\router\\admin\\admin.ts","content":"import axios from 'axios'\nimport express from 'express'\nimport { UploadedFile } from 'express-fileupload'\nimport { auth } from '../../middleware/authentication'\nimport Admin from '../../model/admin/admin'\nimport { findModel, genQueryObjs, query, saveFile } from '../../utilities'\nconst router = express.Router()\n\nconst billingurl = process.env.BILLING_URL\nconst authToken = process.env.BILLING_AUTH_TOKEN\n\nrouter.post('/admin/login', async (req, res) => {\n    try {\n        const admin = await Admin.findByCredentials(req.body.username, req.body.password)\n        const token = await admin.generateToken()\n        res.cookie('token', token)\n        res.modifiedSend({ admin, token })\n    } catch (e) {\n        res.status(401).send({ error: 'wrong username or password' })\n    }\n})\n\nrouter.get('/admin/me', auth(1), async (req, res) => {\n    res.modifiedSend(req.admin)\n})\n\nrouter.get('/admin', auth(1), async (req, res) => {\n    res.modifiedSend(await Admin.find())\n})\n\nrouter.get('/admin/*', auth(1), async (req, res) => {\n    const route = req.url.substring(7).split('/')\n    if (route.length == 1 || route.length == 2) {\n        const model = findModel(route[0].split('?')[0])\n        if (model) {\n            const Model = model.Model\n            const populations: any = []\n            const paths = Model.schema.paths\n            for (let key in paths) {\n                if (paths[key].schema) {\n                    for (let innerKey in paths[key].schema.paths) {\n                        populations.push(key + '.' + innerKey)\n                    }\n                } else {\n                    populations.push(key)\n                }\n            }\n            if (route.length == 1) {\n                const options = genQueryObjs(req, Model)\n                options.where.deleted = false\n                const total = await Model.count(options.where)\n                const prepResult = await query(Model, populations, options)\n                const result = []\n                for (let row of prepResult) {\n                    result.push(row.toObject())\n                }\n                return res.send({ result: prepResult, total })\n            } else {\n                const id = route[1]\n                let promise = Model.findById(id)\n                for (let key of populations) {\n                    promise.populate(key)\n                }\n                try {\n                    const result = await promise\n                    if (result.deleted) return res.status(404).send({ error: 'not found' })\n                    return res.send(result)\n                } catch (e) {\n                    return res.status(404).send({ error: 'not found' })\n                }\n            }\n        }\n    }\n    res.send(route)\n})\n\nrouter.patch('/admin/*', auth(1), async (req, res) => {\n    const route = req.url.substring(7).split('/')\n    if (route.length == 2) {\n        const model = findModel(route[0])\n        if (model) {\n            const Model = model.Model\n            const populations: any = []\n            const paths = Model.schema.paths\n            for (let key in paths) {\n                if (paths[key].schema) {\n                    for (let innerKey in paths[key].schema.paths) {\n                        populations.push(key + '.' + innerKey)\n                    }\n                } else {\n                    populations.push(key)\n                }\n            }\n            const id = route[1]\n            let promise = Model.findById(id)\n            for (let key of populations) {\n                promise.populate(key)\n            }\n            try {\n                const result = await promise\n                result.set(req.body)\n                if (req.files) {\n                    for (let key in req.files) {\n                        if (Object.keys(paths).includes(key)) {\n                            const filePath = await saveFile(req.files[key] as UploadedFile, 'public/files')\n                            result[key] = filePath\n                        }\n                    }\n                }\n                await result.save()\n                return res.send(result)\n            } catch (e) {\n                return res.status(404).send({ error: 'not found' })\n            }\n        }\n    }\n    res.send(route)\n})\n\nrouter.delete('/admin/*', auth(1), async (req, res) => {\n    const route = req.url.substring(7).split('/')\n    if (route.length == 2) {\n        const model = findModel(route[0])\n        if (model) {\n            const Model = model.Model\n            const id = route[1]\n            let promise = Model.findById(id)\n            try {\n                const result = await promise\n                result.deleted = true\n                await result.save()\n                return res.send(result)\n            } catch (e) {\n                return res.status(404).send({ error: 'not found' })\n            }\n        }\n    }\n    res.send(route)\n})\n\nrouter.post('/admin/*', auth(1), async (req, res) => {\n    const route = req.url.substring(7).split('/')\n    const model = findModel(route[0])\n    if (route.length == 1) {\n        if (model) {\n            const Model = model.Model\n            const populations: any = []\n            const paths = Model.schema.paths\n            for (let key in paths) {\n                if (paths[key].schema) {\n                    for (let innerKey in paths[key].schema.paths) {\n                        populations.push(key + '.' + innerKey)\n                    }\n                } else {\n                    populations.push(key)\n                }\n            }\n            try {\n                const newOne = await Model.create(req.body)\n                let promise = Model.findById(newOne.id)\n                for (let key of populations) {\n                    promise.populate(key)\n                }\n                try {\n                    const result = await promise\n                    return res.send(result)\n                } catch (e) {\n                    return res.status(404).send({ error: 'not found' })\n                }\n            } catch (e: any) {\n                res.status(400).send({ error: e.message })\n            }\n        }\n    }\n    res.send(route)\n})\nrouter.get('/billing/*', auth(1), async (req, res) => {\n    try {\n        const url = billingurl + '/' + req.url.substring(16)\n        console.log('\\n\\nurl: ' + url)\n        console.log('method: get')\n        const data = (await axios.get(url, { headers: { Authorization: `${authToken}` } })).data\n        console.log('success: ' + JSON.stringify(data))\n        res.send(data)\n    } catch (e: any) {\n        if (e.response && e.response.data) {\n            console.log('fail: ')\n            console.log(JSON.stringify(e.response.data))\n        }\n        res.status(400).send({ error: e.message })\n    }\n})\n\nrouter.post('/billing/*', auth(1), async (req, res) => {\n    try {\n        const url = billingurl + '/' + req.url.substring(16)\n        console.log('\\n\\nurl: ' + url)\n        console.log('method: post')\n        console.log('body: ' + JSON.stringify(req.body))\n        const data = (await axios.post(url, req.body, { headers: { Authorization: `${authToken}` } })).data\n        res.send(data)\n        console.log('success: ' + JSON.stringify(data))\n    } catch (e: any) {\n        if (e.response && e.response.data) {\n            console.log('fail: ')\n            console.log(JSON.stringify(e.response.data))\n        }\n        res.status(400).send({ error: e.message })\n    }\n})\n\nrouter.patch('/billing/*', auth(1), async (req, res) => {\n    try {\n        const url = billingurl + '/' + req.url.substring(16)\n        console.log('\\n\\nurl: ' + url)\n        console.log('method: patch')\n        console.log('body: ' + JSON.stringify(req.body))\n        const data = (await axios.patch(url, req.body, { headers: { Authorization: `${authToken}` } })).data\n        res.send(data)\n        console.log('success: ' + JSON.stringify(data))\n    } catch (e: any) {\n        if (e.response && e.response.data) {\n            console.log('fail: ')\n            console.log(JSON.stringify(e.response.data))\n        }\n        res.status(400).send({ error: e.message })\n    }\n})\n\nrouter.delete('/billing/*', auth(1), async (req, res) => {\n    try {\n        const url = billingurl + '/' + req.url.substring(16)\n        console.log('\\n\\nurl: ' + url)\n        console.log('method: delete')\n        const data = (await axios.delete(url, { headers: { Authorization: `${authToken}` } })).data\n        res.send(data)\n        console.log('success: ' + JSON.stringify(data))\n    } catch (e: any) {\n        if (e.response && e.response.data) {\n            console.log('fail: ')\n            console.log(JSON.stringify(e.response.data))\n        }\n        res.status(400).send({ error: e.message })\n    }\n})\nexport default router\n"},{"path":"\\src\\router\\admin\\api.ts","content":"import express from 'express'\nimport { auth } from '../../middleware/authentication'\nimport API, { IAPI } from '../../model/admin/api'\nconst router = express.Router()\n\nrouter.get('/api', auth(1), async (req, res) => {\n    res.modifiedSend(await API.find())\n})\n\nrouter.get('/api/:id', auth(1), async (req, res) => {\n    try {\n        const api = await API.findById(req.params.id)\n        if (!api) {\n            res.status(404).send({ error: 'api not found' })\n            return\n        }\n        res.modifiedSend(api)\n    } catch (e) {\n        if (e instanceof Error)\n            if (e instanceof Error) {\n                res.status(400).send({ error: e.stack })\n            }\n    }\n})\n\nexport default router\n"},{"path":"\\src\\router\\admin\\role.ts","content":"import express from 'express'\nimport { auth } from '../../middleware/authentication'\nimport Admin from '../../model/admin/admin'\nimport API, { IAPI } from '../../model/admin/api'\nimport Role, { IRole } from '../../model/admin/role'\nconst router = express.Router()\n\n// valid inputs: name\n// required inputs: name\nrouter.post('/role', auth(1), async (req, res) => {\n    try {\n        const role = await Role.create(req.body)\n        res.modifiedSend(role)\n    } catch (e) {\n        if (e instanceof Error)\n            if (e instanceof Error) {\n                res.status(400).send({ error: e.message })\n            }\n    }\n})\n\nrouter.get('/role', auth(1), async (req, res) => {\n    res.modifiedSend((await Role.find().select('-apis._id')).filter((s) => s.name !== 'GOD'))\n})\n\nrouter.get('/role/:id', auth(1), async (req, res) => {\n    try {\n        const role = await Role.findById(req.params.id).select('-apis._id')\n        if (!role) {\n            res.status(404).send({ error: 'role not found' })\n            return\n        }\n        res.modifiedSend(role)\n    } catch (e) {\n        if (e instanceof Error)\n            if (e instanceof Error) {\n                res.status(400).send({ error: e.message })\n            }\n    }\n})\n\nrouter.delete('/role/:id', auth(1), async (req, res) => {\n    try {\n        const role = await Role.findById(req.params.id)\n        if (!role) {\n            res.status(404).send({ error: 'role not found' })\n            return\n        }\n        if (role.admins && role.admins.length > 0) {\n            for (let i = 0; i < role.admins.length; i++) {\n                const id: string = role.admins[i].toString()\n                const admin = await Admin.findById(id)\n                await admin?.removeRole(role)\n            }\n        }\n        await role.deleteOne()\n        res.modifiedSend({ msg: 'role deleted' })\n    } catch (e) {\n        if (e instanceof Error)\n            if (e instanceof Error) {\n                res.status(400).send({ error: e.message })\n            }\n    }\n})\n\n// valid inputs: name\nrouter.patch('/role/:id', auth(1), async (req, res) => {\n    try {\n        const role = await Role.findById(req.params.id)\n        if (!role) {\n            res.status(404).send({ error: 'role not found' })\n            return\n        }\n        role.set(req.body)\n        await role.save()\n        res.modifiedSend(role)\n    } catch (e) {\n        if (e instanceof Error)\n            if (e instanceof Error) {\n                res.status(400).send({ error: e.message })\n            }\n    }\n})\n\nrouter.get('/role/:id/api', auth(1), async (req, res) => {\n    try {\n        const role = await Role.findById(req.params.id)\n        if (!role) {\n            res.status(404).send({ error: 'role not found' })\n            return\n        }\n        const apis = await role.getAPIs()\n        res.modifiedSend(apis)\n    } catch (e) {\n        if (e instanceof Error)\n            if (e instanceof Error) {\n                res.status(400).send({ error: e.message })\n            }\n    }\n})\n\nrouter.post('/role/:id/api/:api', auth(1), async (req, res) => {\n    const role = await Role.findById(req.params.id)\n    if (!role) {\n        res.status(404).send({ error: 'role not found' })\n        return\n    }\n    const api = await API.findById(req.params.api)\n    if (!api) {\n        res.status(404).send({ error: 'api not found' })\n        return\n    }\n    try {\n        await role.addAPI(api)\n        res.modifiedSend({ msg: 'api added to role' })\n    } catch (e) {\n        res.modifiedSend({ msg: 'already had access' })\n    }\n})\n\nrouter.delete('/role/:id/api/:api', auth(1), async (req, res) => {\n    try {\n        const role = await Role.findById(req.params.id)\n        if (!role) {\n            res.status(404).send({ error: 'role not found' })\n            return\n        }\n        const api = await API.findById(req.params.api)\n        if (!api) {\n            res.status(404).send({ error: 'api not found' })\n            return\n        }\n        await role.removeAPI(api)\n        res.modifiedSend({ msg: 'api removed' })\n    } catch (e) {\n        if (e instanceof Error)\n            if (e instanceof Error) {\n                res.status(400).send({ error: e.message })\n            }\n    }\n})\n\nexport default router\n"},{"path":"\\src\\router\\maintenance\\audit.ts","content":"import express from 'express'\nimport { auth } from '../../middleware/authentication'\nimport Audit from '../../model/maintenance/audit'\nimport { genQueryObjs, query } from '../../utilities'\nconst router = express.Router()\n\nrouter.get('/audit', auth(3), async (req, res) => {\n    try {\n        const options = genQueryObjs(req, Audit)\n        const result = await query(Audit, [], options)\n        const total = await Audit.count(options.where)\n        res.send({ result, total })\n    } catch (e) {\n        if (e instanceof Error) res.status(400).send({ error: e.message })\n    }\n})\n\nexport default router\n"},{"path":"\\src\\router\\maintenance\\constant.ts","content":"import express from 'express'\nimport { UploadedFile } from 'express-fileupload'\nimport { auth } from '../../middleware/authentication.js'\nimport Constant from '../../model/maintenance/constant.js'\nimport { genQueryObjs, query, saveFile } from '../../utilities.js'\n\nconst router = express.Router()\n\nrouter.post('/constant', auth(1), async (req, res) => {\n    try {\n        if (!req.admin) return res.status(500).send({ error: 'admin not found' })\n        let constant = new Constant(req.body)\n        await constant.apply(req.admin.id)\n        res.modifiedSend(constant)\n    } catch (e) {\n        if (e instanceof Error) res.status(400).send({ error: e.message })\n    }\n})\n\nrouter.get('/constant', async (req, res) => {\n    try {\n        const options = genQueryObjs(req, Constant)\n        const total = await Constant.count(options.where)\n        const result = await query(Constant, [], options)\n        res.send({ result, total })\n    } catch (e) {\n        if (e instanceof Error) res.status(400).send({ error: e.message })\n    }\n})\n\nrouter.get('/constant/:key', async (req, res) => {\n    try {\n        const constant = await Constant.findOne({ key: req.params.key })\n        if (!constant) {\n            res.status(404).send({ msg: 'not found' })\n            return\n        }\n        res.modifiedSend(constant)\n    } catch (e) {\n        if (e instanceof Error) res.status(400).send({ error: e.message })\n    }\n})\n\nrouter.get('/constant/:id', async (req, res) => {\n    try {\n        const constant = await Constant.findById(req.params.id)\n        if (!constant) {\n            res.status(404).send({ msg: 'not found' })\n            return\n        }\n        res.modifiedSend(constant)\n    } catch (e) {\n        if (e instanceof Error) res.status(400).send({ error: e.message })\n    }\n})\n\nrouter.patch('/constant/:id', auth(1), async (req, res) => {\n    try {\n        if (!req.admin) return res.status(500).send({ error: 'admin not found' })\n        const constant = await Constant.findById(req.params.id)\n        if (!constant) {\n            res.status(404).send({ msg: 'not found' })\n            return\n        }\n        constant.set(req.body)\n        if (req.files && req.files.file) {\n            const path = await saveFile(req.files.file as UploadedFile, 'public/default')\n            constant.values = [path]\n        }\n        await constant.apply(req.admin.id)\n        res.modifiedSend(constant)\n    } catch (e) {\n        if (e instanceof Error) res.status(400).send({ error: e.message })\n    }\n})\n\nrouter.delete('/constant/:id', auth(1), async (req, res) => {\n    try {\n        if (!req.admin) return res.status(500).send({ error: 'admin not found' })\n        let constant = await Constant.findById(req.params.id)\n        if (!constant) {\n            res.status(404).send({ msg: 'not found' })\n            return\n        }\n        if (constant.key == 'avatar' || constant.key == 'teamAvatar' || constant.key == 'projectAvatar') {\n            res.status(404).send({ msg: \"default avatar can't be deleted\" })\n            return\n        }\n        constant.deleted = true\n        await constant.apply(req.admin.id)\n        res.status(200).send({ msg: 'done' })\n    } catch (e) {\n        if (e instanceof Error) res.status(400).send({ error: e.message })\n    }\n})\n\nexport default router\n"},{"path":"\\src\\router\\team\\user.ts","content":"import express from 'express'\nimport getRedis from '../../db/redis'\nimport { auth } from '../../middleware/authentication'\nconst redis = getRedis()\nconst router = express.Router()\n\nrouter.get('/user/me', auth(2), async (req, res) => {\n    res.modifiedSend(req.user)\n})\n\nrouter.patch('/user/me', auth(2), async (req, res) => {\n    try {\n        if (!req.user) throw new Error('server error: user not found')\n        req.user.set(req.body)\n        await req.user.save()\n        res.send(req.user)\n    } catch (e) {\n        if (e instanceof Error) {\n            res.status(400).send({ error: e.message })\n        }\n    }\n})\n\n\nexport default router\n"},{"path":"\\src\\scanApis.ts","content":"import Admin from './model/admin/admin'\nimport API from './model/admin/api'\nimport Role from './model/admin/role'\nimport fs from 'fs'\nimport { Schema, Types } from 'mongoose'\nimport { listFiles } from './utilities'\n\nconst dir = process.cwd() + '/src/router/'\nconst scan = async () => {\n    let godAdmin = await Admin.findOne({ username: 'admin' })\n    let godRole = await Role.findOne({ name: 'GOD' })\n    if (!godAdmin) {\n        godAdmin = new Admin({ username: 'admin', password: 'admin' })\n        await godAdmin.generateToken()\n    }\n    if (!godRole) {\n        godRole = await Role.create({ name: 'GOD' })\n    }\n    if (!godAdmin.roles.includes(godRole._id)) {\n        await godAdmin.addRole(godRole)\n    }\n    await scanDir(dir)\n    const apis = await API.find()\n    for (let i = 0; i < apis.length; i++) {\n        if (!ids.includes(apis[i]._id.toString())) {\n            await API.findByIdAndRemove(apis[i].id)\n        }\n    }\n    console.log('scan completed')\n}\n\nconst ids: string[] = []\n\nconst scanDir = async (dir: string) => {\n    const files = listFiles([], dir)\n    if (!files) return\n    for (let i = 0; i < files.length; i++) {\n        const routerFile = files[i].path\n        try {\n            const str = fs.readFileSync(routerFile).toString()\n            const part = str.split('router.')\n            for (let i = 1; i < part.length; i++) {\n                try {\n                    const method = part[i].split('(')[0]\n                    const route = part[i].split(\"'\")[1].split(\"'\")[0]\n                    const validInputs: Array<string> = []\n                    const requiredInputs: Array<string> = []\n                    const foreignKeys: Array<string> = []\n                    if (part[i - 1].includes('// valid inputs: ')) {\n                        const v = part[i - 1].split('// valid inputs: ')[1].split('\\n')[0].replace('\\n', '').replace('\\r', '')\n                        v.split(',').forEach((input) => validInputs.push(input))\n                    }\n                    if (part[i - 1].includes('// required inputs: ')) {\n                        const r = part[i - 1].split('// required inputs: ')[1].split('\\n')[0].replace('\\n', '').replace('\\r', '')\n                        r.split(',').forEach((input) => requiredInputs.push(input))\n                    }\n                    if (part[i - 1].includes('// foreign keys: ')) {\n                        const f = part[i - 1].split('// foreign keys: ')[1].split('\\n')[0].replace('\\n', '').replace('\\r', '')\n                        f.split(',').forEach((input) => foreignKeys.push(input))\n                    }\n                    const api = await API.findOrCreate({\n                        route,\n                        method,\n                        routerFile,\n                        validInputs,\n                        requiredInputs,\n                        foreignKeys,\n                    })\n                    ids.push(api._id.toString())\n                } catch (ee) {}\n            }\n        } catch (e) {\n            await scanDir(dir + routerFile + '/')\n        }\n    }\n}\n\nexport default scan\n"},{"path":"\\src\\utilities.ts","content":"import { Request } from 'express'\nimport { UploadedFile } from 'express-fileupload'\nimport fs from 'fs'\nimport mongoose, { Model } from 'mongoose'\nimport Admin from './model/admin/admin.js'\nimport Audit from './model/maintenance/audit.js'\nimport User from './model/profile/user.js'\n\n\nexport const generalApply = async (id: string, doc: any, Model: Model<any>, ip?: string) => {\n    try {\n        if (!mongoose.isValidObjectId(id)) id = '000000000000000000000000'\n        const user = await User.findById(id)\n        const admin = await Admin.findById(id)\n        const modelObj = doc.toObject() as any\n        const before = await Model.findById(doc.id)\n        const result: any = {}\n        if (before) {\n            const beforeObj = before.toObject() as any\n            for (let key of Object.keys(modelObj)) {\n                if (typeof modelObj[key] == 'object') {\n                    if (modelObj && modelObj[key] && beforeObj && beforeObj[key] && modelObj[key].toString() !== beforeObj[key].toString()) {\n                        result[key] = { before: beforeObj[key], after: modelObj[key] }\n                    }\n                } else {\n                    if (modelObj[key] !== beforeObj[key]) {\n                        result[key] = { before: beforeObj[key], after: modelObj[key] }\n                    }\n                }\n            }\n            for (let key of Object.keys(beforeObj)) {\n                if (typeof beforeObj[key] == 'object') {\n                    if (modelObj && modelObj[key] && beforeObj && beforeObj[key] && modelObj[key].toString() !== beforeObj[key].toString()) {\n                        result[key] = { before: beforeObj[key], after: modelObj[key] }\n                    }\n                } else {\n                    if (modelObj[key] !== beforeObj[key]) {\n                        result[key] = { before: beforeObj[key], after: modelObj[key] }\n                    }\n                }\n            }\n            if (Object.keys(result).length > 0) await Audit.create({ UserId: user?._id, AdminId: admin?._id, type: 'modify', col: Model.modelName, docId: doc.id, change: result, ip })\n        } else {\n            await Audit.create({ TeamId: doc.TeamId, UserId: user?._id, AdminId: admin?._id, type: 'create', col: Model.modelName, docId: doc.id, change: modelObj, ip })\n        }\n        console.log('Temp Log: ' + JSON.stringify({ TeamId: doc.TeamId, UserId: user?._id, AdminId: admin?._id, type: 'create', col: Model.modelName, docId: doc.id, change: modelObj, ip }))\n        await doc.save()\n    } catch (e) {}\n}\n\nexport const genPassword = (passwordLength = 8) => {\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    var password = ''\n    for (var i = 0; i <= passwordLength; i++) {\n        var randomNumber = Math.floor(Math.random() * chars.length)\n        password += chars.substring(randomNumber, randomNumber + 1)\n    }\n    return password\n}\n\nexport const filter = (data: any, sample: any) => {\n    const clone = JSON.parse(JSON.stringify(data))\n    try {\n        if (!(typeof clone == 'object')) return clone\n        if (typeof clone == 'object' && typeof sample == 'string') return clone\n        for (let key in clone) {\n            if (!(key in sample)) {\n                delete clone[key]\n            } else {\n                if (sample[key] == 'any') continue\n                if (typeof clone[key] == 'object') {\n                    if (Array.isArray(clone[key])) {\n                        for (let i = 0; i < clone[key].length; i++) {\n                            clone[key][i] = filter(clone[key][i], sample[key][0])\n                        }\n                    } else {\n                        clone[key] = filter(clone[key], sample[key])\n                    }\n                }\n            }\n        }\n        return clone\n    } catch (e) {\n        return clone\n    }\n}\n\nexport const findModel = (name: string) => {\n    try {\n        const files = listFiles([], process.cwd() + '/dist/src/model')\n        if (!files) return null\n        for (const file of files) {\n            if (!file.path.endsWith('.map')) {\n                try {\n                    const Model = require(file.path).default\n                    if (Model.modelName.toLowerCase() == name.toLowerCase()) {\n                        return { Model, file }\n                    }\n                } catch (e) {}\n            }\n        }\n        return null\n    } catch (e) {\n        return null\n    }\n}\n\nexport const listFiles = (result: { name: string; path: string }[], dir: string) => {\n    try {\n        if (!result) result = []\n        const files = fs.readdirSync(dir)\n        for (let i = 0; i < files.length; i++) {\n            if (fs.lstatSync(dir + '/' + files[i]).isDirectory()) {\n                const recursive = listFiles(result, dir + '/' + files[i])\n                if (recursive) result = recursive\n            } else {\n                result.push({ name: files[i], path: dir + '/' + files[i] })\n            }\n        }\n        return result\n    } catch (e) {\n        if (e instanceof Error) console.log(e.stack)\n    }\n}\n\nexport const genQueryObjs = (req: Request, Model: Model<any>) => {\n    const queryKeys = Object.keys(req.query)\n    const staticFields = Object.keys(Model.schema.paths)\n    const where: any = {}\n    for (let i = 0; i < queryKeys.length; i++) {\n        let key = queryKeys[i]\n        let whereKey = key\n        let mode = 0\n        if (key.includes('contain')) {\n            mode = 1\n            whereKey = key.substr(7)\n        } else if (key.includes('startsWith')) {\n            mode = 2\n            whereKey = key.substr(10)\n        } else if (key.includes('endsWith')) {\n            mode = 3\n            whereKey = key.substr(8)\n        } else if (key.includes('max')) {\n            mode = 4\n            whereKey = key.substr(3)\n        } else if (key.includes('min')) {\n            mode = 5\n            whereKey = key.substr(3)\n        }\n        if (!staticFields.includes(whereKey)) {\n            continue\n        }\n        let $or: any = []\n        switch (mode) {\n            case 0:\n                if (!where[whereKey]) where[whereKey] = {}\n                if (isNaN(Number(req.query[key]))) {\n                    where[whereKey].$eq = req.query[key]\n                } else {\n                    where[whereKey].$in = [req.query[key], parseFloat(req.query[key] as string)]\n                }\n                break\n            case 1:\n                if (!where[whereKey]) where[whereKey] = {}\n                where[whereKey].$regex = req.query[key]\n                where[whereKey].$options = 'i'\n                break\n            case 2:\n                if (!where[whereKey]) where[whereKey] = {}\n                where[whereKey].$regex = '^' + req.query[key]\n                where[whereKey].$options = 'i'\n                break\n            case 3:\n                if (!where[whereKey]) where[whereKey] = {}\n                where[whereKey].$regex = req.query[key] + '$'\n                where[whereKey].$options = 'i'\n                break\n            case 4:\n                if (!where.$and) where.$and = []\n                $or = [\n                    {\n                        [whereKey]: { $lte: req.query[key] },\n                    },\n                ]\n                if (!isNaN(Number(req.query[key]))) {\n                    $or.push({\n                        [whereKey]: { $lte: parseFloat(req.query[key] as string) },\n                    })\n                }\n                where.$and.push({ $or })\n                break\n            case 5:\n                if (!where.$and) where.$and = []\n                $or = [\n                    {\n                        [whereKey]: { $gte: req.query[key] },\n                    },\n                ]\n                if (!isNaN(Number(req.query[key]))) {\n                    $or.push({\n                        [whereKey]: { $gte: parseFloat(req.query[key] as string) },\n                    })\n                }\n                where.$and.push({ $or })\n                break\n        }\n    }\n    let order: any = { _id: 1 }\n    let sortField: string | null = null\n    let doubleQuery = false\n    if (req.query.sort) {\n        doubleQuery = true\n        sortField = req.query.sort as string\n        order = {}\n        order[sortField] = 1\n        if ('order' in req.query && req.query.order === 'DESC') {\n            order[sortField] = -1\n            doubleQuery = false\n        }\n        order._id = 1\n    }\n    let page = 1\n    if (req.query.page) {\n        page = parseInt(req.query.page as string)\n    }\n    let pageSize = 25\n    if (req.query.pageSize && !isNaN(Number(req.query.pageSize as string))) {\n        pageSize = parseInt(req.query.pageSize as string)\n    }\n    return { where, order, doubleQuery, page, pageSize, sortField } as options\n}\n\ninterface options {\n    where: any\n    order: any\n    doubleQuery: boolean\n    page: number\n    pageSize: number\n    sortField: string\n}\n\nexport const query = async (Model: Model<any>, populations: string[] | { field: string; selection: string | object }[], options: options) => {\n    try {\n        let { where, order, doubleQuery, page, pageSize, sortField } = options\n        let result: any = []\n        result = Model.find(where)\n        for (let p of populations) {\n            if (typeof p == 'string') {\n                result = result.populate(p)\n            } else {\n                result = result.populate(p.field, p.selection)\n            }\n        }\n        result = result\n            .sort(order)\n            .skip((page - 1) * pageSize)\n            .limit(pageSize)\n        result = await result\n        if (!doubleQuery || true) return result\n    } catch (e) {\n        if (e instanceof Error) console.log(e.message)\n    }\n}\n\nexport const genCode = (length: number) => {\n    var result = ''\n    var characters = '0123456789'\n    var charactersLength = characters.length\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength))\n    }\n    return result\n}\n\nexport const saveFile = async (file: UploadedFile, path: string, privateFile = false) => {\n    return new Promise<string>((resolve, reject) => {\n        let basePath = process.cwd() + '/public/' + path\n        if (privateFile) basePath = process.cwd() + '/private/' + path\n        if (!fs.existsSync(basePath)) {\n            fs.mkdirSync(basePath, { recursive: true })\n        }\n        const fileName = Date.now() + '-' + file.name\n        file.mv(basePath + '/' + fileName, (err: any) => {\n            if (err) {\n                reject(err)\n            } else {\n                resolve('/' + path + '/' + fileName)\n            }\n        })\n    })\n}\n"},{"path":"\\temp.js","content":"// for your experimental codes"},{"path":"\\tsconfig.json","content":"{\n    \"compilerOptions\": {\n        \"module\": \"commonjs\",\n        \"esModuleInterop\": true,\n        \"target\": \"es6\",\n        \"moduleResolution\": \"node\",\n        \"sourceMap\": true,\n        \"outDir\": \"dist\",\n        \"noImplicitAny\": true,\n        \"strictNullChecks\": true,\n        \"strict\": true\n    },\n    \"lib\": [\"es2015\"]\n}\n"}]